import{_ as p,z as o,A as i,Y as n,C as t,U as s,a6 as e,Q as l}from"./framework-cb9358d9.js";const c={},d=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d4eb6a01e6564840817b127265b07edd~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1),r=n("p",null,[n("img",{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9b0e82e8fb4d4c46ab9360fe96b91c44~tplv-k3u1fbpfcp-watermark.image?",alt:"页航.png"})],-1),u={href:"https://www.zoo.team/article/rich-text",target:"_blank",rel:"noopener noreferrer"},m=e('<p>在日常生活中我们会经常接触到各种各样的文档格式和形式，其中富文本在文档格式中扮演了重要角色。对于前端而言，富文本产品也层出不穷，其应用也越来越广。</p><p>这篇文章将会为大家介绍前端富文本的一些基础知识以及简单的实现思路。</p><h2 id="什么是富文本" tabindex="-1"><a class="header-anchor" href="#什么是富文本" aria-hidden="true">#</a> 什么是富文本</h2><p>纯文本就是用纯文字编辑器编写，输入什么就是什么的文档，只包含字符。</p><p>富文本对应的是富文本格式（Rich Text Format），即 RTF 格式，又称多文本格式，是由微软公司开发的跨平台文档格式。除字符外还有丰富的样式。doc，docx，rtf，pdf 等都是富文本格式的文件类型。</p><p>如图所示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40601a6b7f24488b9f438485655b5503~tplv-k3u1fbpfcp-zoom-1.image" alt="image (1).png"></p><h2 id="前端中的富文本" tabindex="-1"><a class="header-anchor" href="#前端中的富文本" aria-hidden="true">#</a> 前端中的富文本</h2><p>前端富文本通过 html 的各个元素配合各种样式（一般是内联样式）实现。</p><p>例如：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/343f0e7cd7f94cd3adb5babf66951b19~tplv-k3u1fbpfcp-zoom-1.image" alt="image (3).png"></p><p>富文本编辑器中的富文本，是由红色框中带有语义化标签和内联样式的 html 渲染实现的。通过富文本编辑器，即可实现富文本的编写、展示。</p><p>目前常见的前端富文本编辑器有 tinymce，UEeditor，draft 等。</p><p>文章下文将会讲述实现前端富文本编辑器的一些基础知识和步骤。</p><h2 id="富文本输入模式实现" tabindex="-1"><a class="header-anchor" href="#富文本输入模式实现" aria-hidden="true">#</a> 富文本输入模式实现</h2><p>实现前端富文本编辑器首先要实现文本输入，一般常用两种方式实现。</p><h3 id="iframe" tabindex="-1"><a class="header-anchor" href="#iframe" aria-hidden="true">#</a> iframe</h3><p>第一种方式是使用 iframe 标签。</p><p>在空白的 HTML 文档中嵌入一个 iframe，并将 designMode 属性设置为 on，文档就会变成可编辑的，实际编辑的则是 iframe 内的 body 元素。文档变成可编辑后，就可以像使用文字处理程序一样编辑文本。</p><p>效果如图：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/24586e6aa44f4099881c019b292d50eb~tplv-k3u1fbpfcp-zoom-1.image" alt="QQ20220722-172729.gif"></p><h3 id="元素设置-contenteditable" tabindex="-1"><a class="header-anchor" href="#元素设置-contenteditable" aria-hidden="true">#</a> 元素设置 contenteditable</h3><p>第二种方式是使用 contenteditable 属性指定 HTML 文档中的元素。该方式是 IE 最早实现的。使用方式是在一个元素上添加 contenteditable 属性并设置为 true，然后该元素会立即被用户编辑。</p><p>此种方式通常会和 autocapitalize（首字母自动大写属性）、spellcheck（检查元素的拼写错误，实验功能）等属性共同使用以提升体验。</p><p>效果如图：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a19813363e5c43d08220e3c24f3f75e8~tplv-k3u1fbpfcp-zoom-1.image" alt="QQ20220722-171453.gif"></p><h3 id="两者特点" tabindex="-1"><a class="header-anchor" href="#两者特点" aria-hidden="true">#</a> 两者特点</h3><p>两种方式都可以实现编辑模式，并且这种编辑模式与 textarea 不同，其内部会用块级元素（默认为 div 元素）做换行处理，最终体现在 dom 结构中。</p><p>两者不同的是：iframe 方式可做到样式隔离，内部样式与外部样式不存在污染与冲突（ tinymce 实现方式）；元素设置 contentEditable 的方式（ wangEditor 等实现方式）则和其他元素一样受到页面 css 作用。个人认为两者没有优劣之分，开发者根据自身需求选择即可。</p><h2 id="富文件选区" tabindex="-1"><a class="header-anchor" href="#富文件选区" aria-hidden="true">#</a> 富文件选区</h2><p>富文本编辑中我们在进行编辑时首先会先选择一块文本区域（即选区），比如选择一段文字并进行字体加粗等操作，那么选区本身包含了哪些信息呢，下面为大家简单介绍一下。</p>',31),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/getSelection",target:"_blank",rel:"noopener noreferrer"},y=e(`<p><strong>anchorNode</strong></p><pre><code>返回选中区域对应的节点
</code></pre><p><strong>anchorOffset</strong></p><p>返回选中区域的起始下标，需要注意起始下标会根据左右方向选择的次序不同来展示不同的下标。如果 anchorNode 是字符串则对应文字下标，anchorNode 是元素，则对应选中区域对应它之前的同级节点的数目。</p><p><strong>focusNode</strong></p><pre><code>返回选中区域终点所在的节点。
</code></pre><p><strong>focusOffset</strong></p><p>与 anchorOffset 类似，如果是 focusNode 是字符串，则对应最后一个选中的字符所在的位置，focusOffset 是元素，则对应选中区域对应同级节点的总数。</p><p><strong>rangeCount</strong></p><pre><code>返回选中的区域所对应的连续的范围内的数量。
</code></pre><p><strong>type</strong></p><pre><code>返回选中区域所对应的类别是连续( Range )，还是同一个位置的( Caret )。
</code></pre><p>我们常通过 anchorNode 与 anchorOffset 属性判断选区起始位置，通过 focusNode 与 focusOffset 属性判断选区终止位置。</p><h3 id="选区示例" tabindex="-1"><a class="header-anchor" href="#选区示例" aria-hidden="true">#</a> 选区示例</h3><p>如图：anchorNode 为选区起始位置所在节点(&quot;政采云&quot;文本节点)，focusNode 为选区结束位置所在节点(&quot;ZOO&quot;文本节点)，anchorOffset 与 focusOffset 分别为起始位置的 index，通过此信息可得到选区范围，此时 Selection 对象 type 为 Range 。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b58237b063924f2f9473b20c24eeb865~tplv-k3u1fbpfcp-zoom-1.image" alt="image (4).png"></p><h3 id="光标示例-起始位置是同一个位置的选区" tabindex="-1"><a class="header-anchor" href="#光标示例-起始位置是同一个位置的选区" aria-hidden="true">#</a> 光标示例（起始位置是同一个位置的选区）</h3><p>如图：anchorNode 与 focusNode 为同一节点(&quot;ZOO&quot;文本节点)，anchorOffset 与 focusOffset 指向节点同一处，通过此信息可得到光标位置，此时 Selection 对象 type 为 Caret 。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a61ef2f6715143e7815e0cdd514cf6b6~tplv-k3u1fbpfcp-zoom-1.image" alt="image (5).png"></p><h3 id="用途" tabindex="-1"><a class="header-anchor" href="#用途" aria-hidden="true">#</a> 用途</h3><h4 id="删除、替换选区内容-插入操作" tabindex="-1"><a class="header-anchor" href="#删除、替换选区内容-插入操作" aria-hidden="true">#</a> 删除、替换选区内容&amp;插入操作</h4>`,21),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Selection/deleteFromDocument",target:"_blank",rel:"noopener noreferrer"},v=e(`<p>效果如图：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/475bcde68fd54fb5b95fee3ef75ba825~tplv-k3u1fbpfcp-zoom-1.image" alt="QQ20220722-175519.gif"></p><p>插入逻辑代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">const</span> insert <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 删除所选内容</span>
    window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">deleteFromDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> selection <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 删除后选取的起始位置就是插入位置，由 anchorNode 及 anchorOffset 确定</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> anchorNode<span class="token punctuation">,</span> anchorOffset <span class="token punctuation">}</span> <span class="token operator">=</span> selection
    <span class="token comment">// anchorNode 分为两种情况，一种是文本节点，另一种是其他类型节点，处理逻辑不同</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>anchorNode<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> string <span class="token operator">=</span> anchorNode<span class="token punctuation">.</span>nodeValue
      <span class="token comment">// anchorNode 为文本节点时，需要将内部字符串与索要插入的内容拼接</span>
      anchorNode<span class="token punctuation">.</span>nodeValue <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> anchorOffset<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>😄<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span> <span class="token operator">+</span> string<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>anchorOffset<span class="token punctuation">,</span> <span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> newNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>span<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span>
      newNode<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>😄<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>
      <span class="token comment">// anchorNode 为其他类型节点时，需要根据 anchorOffset 在 anchorNode 中插入片元素</span>
      anchorNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> anchorNode<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>anchorOffset<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">//也可根据 Selection 提供的原生方法实现</span>
  <span class="token keyword">const</span> insert2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
    lastRange <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRangeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> newNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>span<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    newNode<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>😄<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>
    lastRange<span class="token punctuation">.</span><span class="token function">deleteContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    lastRange<span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>newNode<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Selection#methods",target:"_blank",rel:"noopener noreferrer"},f=n("h2",{id:"富文本工具栏实现",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#富文本工具栏实现","aria-hidden":"true"},"#"),t(" 富文本工具栏实现")],-1),h=n("p",null,"根据前文介绍的方法实现输入功能后，我们即实现了纯文本编辑的功能，那么如何进一步实现富文本编辑呢？",-1),_=n("p",null,"document 提供了 execCommand() 方法，该方法会影响使用 designMode 或contentEditable 属性实现可编辑区域的元素。方法说明如下所示：",-1),q=n("p",null,[n("code",null,"document.execCommand(*aCommandName*, *aShowDefaultUI*, *aValueArgument*)")],-1),x=n("p",null,[n("strong",null,"aCommandName")],-1),C={href:"https://developer.mozilla.org/zh-CN/docs/conflicting/Web/JavaScript/Reference/Global_Objects/String_6fa58bba0570d663099f0ae7ae8883ab",target:"_blank",rel:"noopener noreferrer"},w={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/execCommand#%E5%91%BD%E4%BB%A4",target:"_blank",rel:"noopener noreferrer"},S=n("p",null,[n("strong",null,"aShowDefaultUI")],-1),N={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean",target:"_blank",rel:"noopener noreferrer"},j=e('<p><strong>aValueArgument</strong></p><p>一些命令（例如 insertImage）需要额外的参数（insertImage 需要提供插入 image 的 url），默认为 null。</p><p>该方法执行后，会返回 boolean 值，如果是 false，表示操作不被支持或未被启用。</p><p>不同浏览器支持的命令也不一样。下标列出了最常用的命令。</p><table><thead><tr><th style="text-align:left;"><strong>命令</strong></th><th style="text-align:left;"><strong>作用</strong></th><th style="text-align:left;"><strong>可选值</strong></th></tr></thead><tbody><tr><td style="text-align:left;">backColor</td><td style="text-align:left;">设置文档背景颜色。在styleWithCss模式下，则只影响容器元素的背景颜色。</td><td style="text-align:left;">颜色值&lt;color&gt;字符串（IE使用这个命令设置文本背景色）</td></tr><tr><td style="text-align:left;">bold</td><td style="text-align:left;">切换选中文本的粗体样式</td><td style="text-align:left;">null</td></tr><tr><td style="text-align:left;">createLink</td><td style="text-align:left;">将选中内容转换为指向给定URL的链接</td><td style="text-align:left;">URL链接值，至少包含一个字符</td></tr><tr><td style="text-align:left;">fontSize</td><td style="text-align:left;">将选中文本改为指定字体大小</td><td style="text-align:left;">提供HTML字体尺寸(1-7)</td></tr><tr><td style="text-align:left;">foreColor</td><td style="text-align:left;">将选中文本改为指定颜色</td><td style="text-align:left;">颜色值&lt;color&gt;字符串</td></tr><tr><td style="text-align:left;">formatBlock</td><td style="text-align:left;">将选中文本包含在指定的HTML标签中</td><td style="text-align:left;">提供HTML标签，如&lt;h1&gt;</td></tr><tr><td style="text-align:left;">insertImage</td><td style="text-align:left;">在光标位置插入图片</td><td style="text-align:left;">图片的URL链接</td></tr><tr><td style="text-align:left;">insertParagraph</td><td style="text-align:left;">在光标位置插入&lt;p&gt;元素</td><td style="text-align:left;">null</td></tr><tr><td style="text-align:left;">italic</td><td style="text-align:left;">切换选中文本的斜体样式</td><td style="text-align:left;">null</td></tr><tr><td style="text-align:left;">styleWithCSS</td><td style="text-align:left;">用这个取代useCSS命令。切换使用HTML tags还是CSS来生成标记。</td><td style="text-align:left;">Boolean值，false使用CSS，true使用HTML</td></tr></tbody></table>',5),z={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/execCommand",target:"_blank",rel:"noopener noreferrer"},O=e(`<h3 id="常用功能-字体样式、插入图片-演示" tabindex="-1"><a class="header-anchor" href="#常用功能-字体样式、插入图片-演示" aria-hidden="true">#</a> 常用功能（字体样式、插入图片）演示</h3><p>下图挑选了几个常用命令(加粗、斜体、改变字体颜色、插入图片)作为演示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/00b6d7e5db5f4ee0aeacb18e36ffe60b~tplv-k3u1fbpfcp-zoom-1.image" alt="QQ20220723-184134.gif"></p><p>代码示例如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">// 加粗</span>
  <span class="token keyword">const</span> bold <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>StyleWithCSS<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>Bold<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 斜体</span>
  <span class="token keyword">const</span> italic <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>StyleWithCSS<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>italic<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 改变字体颜色</span>
  <span class="token keyword">const</span> changeColor <span class="token operator">=</span> <span class="token punctuation">(</span>val <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>#ff0000<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>StyleWithCSS<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>foreColor<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 插入图片</span>
  <span class="token keyword">const</span> insertImage <span class="token operator">=</span> <span class="token punctuation">(</span>val <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>avatar<span class="token operator">-</span><span class="token keyword">static</span><span class="token punctuation">.</span>segmentfault<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token number">339</span><span class="token operator">/</span><span class="token number">131</span><span class="token operator">/</span><span class="token number">3391311562</span><span class="token operator">-</span>5d5653daaad5f_huge256<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>StyleWithCSS<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>insertImage<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="富文本数据收集存储与回填" tabindex="-1"><a class="header-anchor" href="#富文本数据收集存储与回填" aria-hidden="true">#</a> 富文本数据收集存储与回填</h2><p>富文本容器的 innerHTML 即是富文本数据。</p><p>编辑区域可通过获取编辑元素的 innerHTML拿到对应富文本数据，存入数据库。</p><p>网络请求的富文本数据设置为富文本容器的 innerHTML，即可展示富文本内容。</p><p>下列图片可简单表明：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0cbdb9442eda4a2eb07bafe7ec8eaa3a~tplv-k3u1fbpfcp-zoom-1.image" alt="QQ20220723-183242.gif"></p><h2 id="结尾-附demo" tabindex="-1"><a class="header-anchor" href="#结尾-附demo" aria-hidden="true">#</a> 结尾（附Demo）</h2><p>根据本文介绍内容我们依次了解了前端富文本的概念、输入模式实现、选区的信息及应用、富文本工具栏的实现和富文本数据收集回填。将这些内容汇总即可实现一个简单的前端富文本编辑器。</p><p>下方附上本文内容汇总的代码 demo ，内含基于 iframe 和 div 元素分别实现的富文本编辑器，功能简单，供读者参考。读者可根据文章内容进行拓展实现自己的前端富文本编辑器。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token entity named-entity" title="&lt;">&amp;lt;</span>html lang=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>en<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>

<span class="token entity named-entity" title="&lt;">&amp;lt;</span>head<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>meta charset=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>UTF-8<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>meta http-equiv=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>X-UA-Compatible<span class="token entity named-entity" title="&quot;">&amp;quot;</span> content=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>IE=edge<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>meta name=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>viewport<span class="token entity named-entity" title="&quot;">&amp;quot;</span> content=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>width=device-width, initial-scale=1.0<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>title<span class="token entity named-entity" title="&gt;">&amp;gt;</span>Document<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/title<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/head<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>style<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  .rt-container {
    height: 200px;
    width: 500px;
    padding: 10px;
    overflow: auto;
  }
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/style<span class="token entity named-entity" title="&gt;">&amp;gt;</span>

<span class="token entity named-entity" title="&lt;">&amp;lt;</span>body<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  --------------------------------------------------------------<span class="token entity named-entity" title="&lt;">&amp;lt;</span>br /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>button onclick=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>bold()<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>粗体<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/button<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>button onclick=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>italic()<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>斜体<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/button<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>button onclick=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>changeColor()<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>改变颜色<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/button<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>button onclick=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>insertImage()<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>插入图片<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/button<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>button onclick=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>insert()<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>插入字符(表情)<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/button<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>br /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  元素设置contenteditable<span class="token entity named-entity" title="&lt;">&amp;lt;</span>br /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  --------------------------------------------------------------<span class="token entity named-entity" title="&lt;">&amp;lt;</span>br /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  // 元素设置 contenteditable 方式
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div class=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>rt-container<span class="token entity named-entity" title="&quot;">&amp;quot;</span> contenteditable=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>true<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>政采云前端团队<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  ------------------------------------------------------------------<span class="token entity named-entity" title="&lt;">&amp;lt;</span>br /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>

  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>button onclick=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>boldIframe()<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>iframe粗体<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/button<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>br /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  iframe设置designMode<span class="token entity named-entity" title="&lt;">&amp;lt;</span>br /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  // iframe 设置 designMode 方式
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>iframe class=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>rt-container<span class="token entity named-entity" title="&quot;">&amp;quot;</span> name=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>editor<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>/iframe<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>br /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>

  ------------------------------------------------------------------
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>政采云<span class="token entity named-entity" title="&lt;">&amp;lt;</span>span<span class="token entity named-entity" title="&gt;">&amp;gt;</span>前端<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/span<span class="token entity named-entity" title="&gt;">&amp;gt;</span>团队<span class="token entity named-entity" title="&lt;">&amp;lt;</span>img src=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>https://avatar-static.segmentfault.com/339/131/3391311562-5d5653daaad5f_huge256<span class="token entity named-entity" title="&quot;">&amp;quot;</span>
      width=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>32<span class="token entity named-entity" title="&quot;">&amp;quot;</span> height=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>32<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>ZOO<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>TEAM
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>

<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/body<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>script<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  window.addEventListener(<span class="token entity named-entity" title="&quot;">&amp;quot;</span>load<span class="token entity named-entity" title="&quot;">&amp;quot;</span>, () =<span class="token entity named-entity" title="&gt;">&amp;gt;</span> {
    frames[<span class="token entity named-entity" title="&quot;">&amp;quot;</span>editor<span class="token entity named-entity" title="&quot;">&amp;quot;</span>].document.designMode = <span class="token entity named-entity" title="&quot;">&amp;quot;</span>on<span class="token entity named-entity" title="&quot;">&amp;quot;</span>;
  });
  const bold = (val) =<span class="token entity named-entity" title="&gt;">&amp;gt;</span> {
    document.execCommand(<span class="token entity" title="&#39;">&amp;#39;</span>StyleWithCSS<span class="token entity" title="&#39;">&amp;#39;</span>, true, true)
    document.execCommand(<span class="token entity" title="&#39;">&amp;#39;</span>Bold<span class="token entity" title="&#39;">&amp;#39;</span>, false, val)
  }
  const italic = (val) =<span class="token entity named-entity" title="&gt;">&amp;gt;</span> {
    document.execCommand(<span class="token entity" title="&#39;">&amp;#39;</span>StyleWithCSS<span class="token entity" title="&#39;">&amp;#39;</span>, true, true)
    document.execCommand(<span class="token entity" title="&#39;">&amp;#39;</span>italic<span class="token entity" title="&#39;">&amp;#39;</span>, false, val)
  }
  const changeColor = (val = <span class="token entity" title="&#39;">&amp;#39;</span>#ff0000<span class="token entity" title="&#39;">&amp;#39;</span>) =<span class="token entity named-entity" title="&gt;">&amp;gt;</span> {
    document.execCommand(<span class="token entity" title="&#39;">&amp;#39;</span>StyleWithCSS<span class="token entity" title="&#39;">&amp;#39;</span>, true, true)
    document.execCommand(<span class="token entity" title="&#39;">&amp;#39;</span>foreColor<span class="token entity" title="&#39;">&amp;#39;</span>, false, val)
  }
  const insertImage = (val = <span class="token entity" title="&#39;">&amp;#39;</span>https://avatar-static.segmentfault.com/339/131/3391311562-5d5653daaad5f_huge256<span class="token entity" title="&#39;">&amp;#39;</span>) =<span class="token entity named-entity" title="&gt;">&amp;gt;</span> {
    document.execCommand(<span class="token entity" title="&#39;">&amp;#39;</span>StyleWithCSS<span class="token entity" title="&#39;">&amp;#39;</span>, true, true)
    document.execCommand(<span class="token entity" title="&#39;">&amp;#39;</span>insertImage<span class="token entity" title="&#39;">&amp;#39;</span>, false, val)
  }

  const boldIframe = (val) =<span class="token entity named-entity" title="&gt;">&amp;gt;</span> {
    frames[<span class="token entity named-entity" title="&quot;">&amp;quot;</span>editor<span class="token entity named-entity" title="&quot;">&amp;quot;</span>].document.execCommand(<span class="token entity" title="&#39;">&amp;#39;</span>StyleWithCSS<span class="token entity" title="&#39;">&amp;#39;</span>, true, true)
    frames[<span class="token entity named-entity" title="&quot;">&amp;quot;</span>editor<span class="token entity named-entity" title="&quot;">&amp;quot;</span>].document.execCommand(<span class="token entity" title="&#39;">&amp;#39;</span>Bold<span class="token entity" title="&#39;">&amp;#39;</span>, false, val)
  }
  const insert = () =<span class="token entity named-entity" title="&gt;">&amp;gt;</span> {
    window.getSelection().deleteFromDocument()
    const selection = window.getSelection()
    const { anchorNode, anchorOffset } = selection
    if (anchorNode.nodeType === 3) {
      const string = anchorNode.nodeValue
      anchorNode.nodeValue = (string.substring(0, anchorOffset) + <span class="token entity" title="&#39;">&amp;#39;</span>😄<span class="token entity" title="&#39;">&amp;#39;</span> + string.substring(anchorOffset, Infinity))
    } else {
      const newNode = document.createElement(<span class="token entity" title="&#39;">&amp;#39;</span>span<span class="token entity" title="&#39;">&amp;#39;</span>)
      newNode.innerText = <span class="token entity" title="&#39;">&amp;#39;</span>😄<span class="token entity" title="&#39;">&amp;#39;</span>
      anchorNode.insertBefore(newNode, anchorNode.childNodes[anchorOffset])
    }
  }
  const insert2 = () =<span class="token entity named-entity" title="&gt;">&amp;gt;</span> {
    lastRange = window.getSelection().getRangeAt(0);
    const newNode = document.createElement(<span class="token entity" title="&#39;">&amp;#39;</span>span<span class="token entity" title="&#39;">&amp;#39;</span>);
    newNode.textContent = <span class="token entity" title="&#39;">&amp;#39;</span>😄<span class="token entity" title="&#39;">&amp;#39;</span>
    lastRange.deleteContents()
    lastRange.insertNode(newNode)
  }
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/script<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/html<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如图：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/115dadd7cf8a464089b39b4e205d98db~tplv-k3u1fbpfcp-zoom-1.image" alt="image (6).png"></p><h2 id="推荐阅读" tabindex="-1"><a class="header-anchor" href="#推荐阅读" aria-hidden="true">#</a> 推荐阅读</h2>`,18),I={href:"https://juejin.cn/post/7122240814108901406",target:"_blank",rel:"noopener noreferrer"},W={href:"https://juejin.cn/post/7119639489567260686",target:"_blank",rel:"noopener noreferrer"},T={href:"https://juejin.cn/post/7117042614313943070",target:"_blank",rel:"noopener noreferrer"},E={href:"https://juejin.cn/post/7114450860335169543",target:"_blank",rel:"noopener noreferrer"},M={href:"https://juejin.cn/post/7111848825232293918",target:"_blank",rel:"noopener noreferrer"},L=n("h2",{id:"开源作品",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开源作品","aria-hidden":"true"},"#"),t(" 开源作品")],-1),R=n("ul",null,[n("li",null,"政采云前端小报")],-1),B={href:"https://www.zoo.team/openweekly/",target:"_blank",rel:"noopener noreferrer"},A=n("ul",null,[n("li",null,"商品选择 sku 插件")],-1),D={href:"https://github.com/zcy-inc/skuPathFinder-back",target:"_blank",rel:"noopener noreferrer"},Q=n("h2",{id:"招贤纳士",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#招贤纳士","aria-hidden":"true"},"#"),t(" 招贤纳士")],-1),H=n("p",null,"政采云前端团队（ZooTeam），一个年轻富有激情和创造力的前端团队，隶属于政采云产品研发部，Base 在风景如画的杭州。团队现有 90 余个前端小伙伴，平均年龄 27 岁，近 4 成是全栈工程师，妥妥的青年风暴团。成员构成既有来自于阿里、网易的“老”兵，也有浙大、中科大、杭电等校的应届新人。团队在日常的业务对接之外，还在物料体系、工程平台、搭建平台、性能体验、云端应用、数据分析及可视化等方向进行技术探索和实战，推动并落地了一系列的内部技术产品，持续探索前端技术体系的新边界。",-1),P=n("p",null,[t("如果你想改变一直被事折腾，希望开始能折腾事；如果你想改变一直被告诫需要多些想法，却无从破局；如果你想改变你有能力去做成那个结果，却不需要你；如果你想改变你想做成的事需要一个团队去支撑，但没你带人的位置；如果你想改变既定的节奏，将会是“5 年工作时间 3 年工作经验”；如果你想改变本来悟性不错，但总是有那一层窗户纸的模糊… 如果你相信相信的力量，相信平凡人能成就非凡事，相信能遇到更好的自己。如果你希望参与到随着业务腾飞的过程，亲手推动一个有着深入的业务理解、完善的技术体系、技术创造价值、影响力外溢的前端团队的成长历程，我觉得我们该聊聊。任何时间，等着你写点什么，发给 "),n("code",null,"ZooTeam@cai-inc.com")],-1),V=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/98d3aa3d1f8646a8bcda8cfd9e335a4b~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1);function F(U,Z){const a=l("ExternalLinkIcon");return o(),i("div",null,[d,r,n("p",null,[t("> 这是第 153 篇不掺水的原创，想获取更多原创好文，请搜索公众号关注我们吧~ 本文首发于政采云前端博客："),n("a",u,[t("前端富文本基础及实现"),s(a)])]),m,n("p",null,[t("Selection 对象表示用户选择的文本范围或插入符号的当前位置。它代表页面中的文本选区，可能横跨多个元素。文本选区由用户拖拽鼠标经过文字而产生。调用 "),n("a",k,[t("window.getSelection()"),s(a)]),t(" 可得到此对象，其内部常用属性如下：")]),y,n("p",null,[t("Selection 对象有 "),n("a",b,[t("deleteFromDocument"),s(a)]),t(" 方法，可以在编辑区域删除选区内容。如想删除后插入，可获取新的 Selection 对象，利用此时位置所在 dom 元素的方法插入对应的文字、元素。")]),v,n("p",null,[t("关于选区的更多用途，可参考选区属性和方法进行灵活实现："),n("a",g,[t("https://developer.mozilla.org/zh-CN/docs/Web/API/Selection#methods"),s(a)])]),f,h,_,q,x,n("p",null,[t("一个 "),n("a",C,[t("DOMString"),s(a)]),t(" ，命令的名称。可用命令列表请参阅 "),n("a",w,[t("命令"),s(a)]),t(" 。")]),S,n("p",null,[t("一个 "),n("a",N,[t("Boolean"),s(a)]),t("， 是否展示用户界面，一般为 false。Mozilla 没有实现。")]),j,n("p",null,[t("关于 document.exexCommand 的更多命令，可参考 "),n("a",z,[t("https://developer.mozilla.org/zh-CN/docs/Web/API/Document/execCommand"),s(a)])]),O,n("p",null,[n("a",I,[t("可视化搭建系统之数据源"),s(a)])]),n("p",null,[n("a",W,[t("表单数据形式配置化设计"),s(a)])]),n("p",null,[n("a",T,[t("如何将传统 Web 框架部署到 Serverless"),s(a)])]),n("p",null,[n("a",E,[t("浅谈前端埋点 & 监控"),s(a)])]),n("p",null,[n("a",M,[t("如何让 x == 1 && x == 2 && x == 3 等式成立"),s(a)])]),L,R,n("p",null,[n("strong",null,[t("开源地址 "),n("a",B,[t("www.zoo.team/openweekly/"),s(a)])]),t(" (小报官网首页有微信交流群)")]),A,n("p",null,[n("strong",null,[t("开源地址 "),n("a",D,[t("https://github.com/zcy-inc/skuPathFinder-back/"),s(a)])])]),Q,H,P,V])}const J=p(c,[["render",F],["__file","前端富文本基础及实现.html.vue"]]);export{J as default};
