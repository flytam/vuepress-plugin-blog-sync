import{_ as p,z as i,A as l,Y as n,C as a,U as s,a6 as e,Q as o}from"./framework-cb9358d9.js";const c={},d=n("p",null,[n("img",{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bfefad3ee3474e3a8a461251aaddceb4~tplv-k3u1fbpfcp-watermark.image?",alt:"政采云技术团队.png"})],-1),r=n("p",null,[n("img",{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6546c8b2768040829a7667de22ff7830~tplv-k3u1fbpfcp-watermark.image?",alt:"伟豪.png"})],-1),u=n("p",null,"> 这是第 161 篇不掺水的原创，想获取更多原创好文，请搜索公众号【政采云前端团队】关注我们吧~",-1),m=n("h2",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),a(" 前言")],-1),k=n("code",null,"&quot;所见即所得&quot;",-1),v={href:"https://juejin.cn/post/7030291455243452429",target:"_blank",rel:"noopener noreferrer"},b={href:"https://juejin.cn/post/6937257727106220040",target:"_blank",rel:"noopener noreferrer"},y=e('<p>今天我们也来实现一个&quot;所见即所得&quot;的需求：将用户所见网页提取为图片。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/946b0753eb2c4e87ad73f3fbeafa1034~tplv-k3u1fbpfcp-zoom-1.image" alt="2C0714D1-BBEB-4810-8C64-F66963489F9D.png"></p><h2 id="方案1-最短步骤实现结果" tabindex="-1"><a class="header-anchor" href="#方案1-最短步骤实现结果" aria-hidden="true">#</a> 方案1：最短步骤实现结果</h2><p>第一个想到的方案就是通过浏览器自带的网页另存为图片去实现。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0c060bfc087148f397b0db5013012234~tplv-k3u1fbpfcp-zoom-1.image" alt="68630441-5C95-4594-AFB1-CDE4C6F1B348.png"></p><p>但这种方法显然是不可行的。第一需要提示用户操作进行繁琐的操作，第二无法达到局部提取为图片的效果。</p><h2 id="方案2-达成初步可行方案" tabindex="-1"><a class="header-anchor" href="#方案2-达成初步可行方案" aria-hidden="true">#</a> 方案2：达成初步可行方案</h2>',7),g={href:"http://html2canvas.hertzen.com/",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"canvas",-1),f=e(`<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5a77d7bf291740349a16c0cca4e30ade~tplv-k3u1fbpfcp-zoom-1.image" alt="20221011134318.jpg"></p><p>引入html2canvas</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cnpm install --save html2canvas
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>HTML</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token entity named-entity" title="&lt;">&amp;lt;</span>div class=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>box<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>!-- 将可保存为图片的内容 通过一个 标签 框起来 --<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div id=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>screenshot-box<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>!-- 内容可以随意 --<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>p<span class="token entity named-entity" title="&gt;">&amp;gt;</span>名称：<span class="token entity named-entity" title="&lt;">&amp;lt;</span>a-input v-model=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>formState.name<span class="token entity named-entity" title="&quot;">&amp;quot;</span> /<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>/p<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>p<span class="token entity named-entity" title="&gt;">&amp;gt;</span>年龄：<span class="token entity named-entity" title="&lt;">&amp;lt;</span>a-input v-model=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>formState.age<span class="token entity named-entity" title="&quot;">&amp;quot;</span> /<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>/p<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>p<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        班级：
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>a-radio-group v-model=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>formState.class<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
          <span class="token entity named-entity" title="&lt;">&amp;lt;</span>a-radio value=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>1<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>班级1<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/a-radio<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
          <span class="token entity named-entity" title="&lt;">&amp;lt;</span>a-radio value=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>2<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>班级2<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/a-radio<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/a-radio-group<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/p<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>a-button  @click=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>onSaveCanvas<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>保存为图片<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/a-button<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JS</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 点击保存为Canvas</span>
    <span class="token function">onSaveCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token comment">// 这里的类名要与点击事件里的一样</span>
        <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>#screenshot<span class="token operator">-</span>box<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token function">html2canvas</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">scale</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">logging</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token literal-property property">useCORS</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">canvas</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>png<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
          <span class="token keyword">let</span> imgData <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// 图片格式处理</span>
          <span class="token keyword">let</span> <span class="token function-variable function">_fixType</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          type <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">jpg</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>jpeg<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">let</span> r <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">png|jpeg|bmp|gif</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>image<span class="token operator">/</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span> <span class="token operator">+</span> r<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
            imgData <span class="token operator">=</span> imgData<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token function">_fixType</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>image<span class="token operator">/</span>octet<span class="token operator">-</span>stream<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> filename <span class="token operator">=</span> <span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>htmlImg<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span> <span class="token operator">+</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span> <span class="token operator">+</span> type<span class="token punctuation">;</span>
            <span class="token comment">// 保存为文件</span>
            <span class="token comment">//  以bolb文件下载</span>
 that<span class="token punctuation">.</span><span class="token function">downFileToLocal</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span>that<span class="token punctuation">.</span><span class="token function">convertBase64ToBlob</span><span class="token punctuation">(</span>imgData<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如此我们便实现了初步的功能。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dec5e02062c74cba8d889df06ca8c900~tplv-k3u1fbpfcp-zoom-1.image" alt="1.gif"></p><p>当然，我们也可以设置一个预览图片来预览我们将要导出的图片。</p><p>HTML</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token entity named-entity" title="&lt;">&amp;lt;</span>img :src=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>previewPic<span class="token entity named-entity" title="&quot;">&amp;quot;</span> alt=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>预览图片<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>JS</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>previewPic <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span><span class="token function">convertBase64ToBlob</span><span class="token punctuation">(</span>imgData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>展示效果</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/02bbb33f4bef4f5cbe2929f51b8bbbad~tplv-k3u1fbpfcp-zoom-1.image" alt="A9A4712D-B30C-452E-A610-9F5ACF492162.png"></p><h2 id="将方案进行拓展并升级" tabindex="-1"><a class="header-anchor" href="#将方案进行拓展并升级" aria-hidden="true">#</a> 将方案进行拓展并升级</h2><p>需求止步于此，但秉承着&quot;将事情做的更好&quot;的我们岂能止步于此。</p><h3 id="实现html导出为word" tabindex="-1"><a class="header-anchor" href="#实现html导出为word" aria-hidden="true">#</a> 实现HTML导出为Word</h3><p>我们需要通过 html-docx 来实现导出为Word（<strong>导出Word目前只支持原生HTML + CSS</strong>）。</p><p>引入html-docx</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cnpm install --save html-docx-js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>HTML</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token entity named-entity" title="&lt;">&amp;lt;</span>div id=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>export-word<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>table border <span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>tr<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
          <span class="token entity named-entity" title="&lt;">&amp;lt;</span>th<span class="token entity named-entity" title="&gt;">&amp;gt;</span>姓名<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/th<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
          <span class="token entity named-entity" title="&lt;">&amp;lt;</span>th<span class="token entity named-entity" title="&gt;">&amp;gt;</span>年龄<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/th<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/tr<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>tr<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
          <span class="token entity named-entity" title="&lt;">&amp;lt;</span>td<span class="token entity named-entity" title="&gt;">&amp;gt;</span>贾维斯<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/td<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
          <span class="token entity named-entity" title="&lt;">&amp;lt;</span>td<span class="token entity named-entity" title="&gt;">&amp;gt;</span>2<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/td<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/tr<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/table<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>a-button  @click=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>onWordExport<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>导出为word<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/a-button<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JS</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">onWordExport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> contentHtml <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token keyword">export</span><span class="token operator">-</span>word<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>
        <span class="token keyword">const</span> cssHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">table {
                          width: 200px;
                          border: 1px solid #ccc;
                          color:red;
                        }</span><span class="token template-punctuation string">\`</span></span>
        <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;
            &amp;lt;head&amp;gt;
                &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=UTF-8&amp;quot;&amp;gt;
                &amp;lt;style&amp;gt;
                    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cssHTML<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
                &amp;lt;/style&amp;gt;
            &amp;lt;/head&amp;gt;
            &amp;lt;body&amp;gt;
                </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contentHtml<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
            &amp;lt;/body&amp;gt;
            &amp;lt;/html&amp;gt;</span><span class="token template-punctuation string">\`</span></span>
        <span class="token keyword">var</span> converted <span class="token operator">=</span> htmlDocx<span class="token punctuation">.</span><span class="token function">asBlob</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">orientation</span><span class="token operator">:</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>landscape<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">downFileToLocal</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>word文件名<span class="token punctuation">.</span>docx<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span>converted<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>展示效果</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c25207348094464b8aed24cfdb0cbd05~tplv-k3u1fbpfcp-zoom-1.image" alt="2.gif"></p><p>如此我们便实现了导出 HTML 为 Word。</p><h3 id="实现html导出为pdf" tabindex="-1"><a class="header-anchor" href="#实现html导出为pdf" aria-hidden="true">#</a> 实现HTML导出为PDF</h3>`,30),_={href:"https://github.com/parallax/jsPDF",target:"_blank",rel:"noopener noreferrer"},q={href:"https://blog.csdn.net/weixin_43897590/article/details/124729389",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/wkhtmltopdf/wkhtmltopdf",target:"_blank",rel:"noopener noreferrer"},w=e(`<table><thead><tr><th>方案</th><th>优点</th><th>缺点</th><th>分页</th><th>图片</th><th>表格</th><th>链接</th><th>中文</th><th>特殊字符</th></tr></thead><tbody><tr><td>jsPDF</td><td>1、整个过程在客户端执行(不需要服务器参与)，调用简单</td><td>1、生成的pdf为图片形式，且内容失真</td><td>支持</td><td>支持</td><td>支持</td><td>不支持</td><td>支持</td><td>支持</td></tr><tr><td>iText</td><td>1、功能基本可以实现，比较灵活 2、生成pdf质量较高</td><td>1、对html标签严格，少一个结束标签就会报错；2、后端实现复杂，服务器需要安装字体；3、图片渲染比较复杂</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>wkhtmltopdf</td><td>1、调用方式简单；2、生成pdf质量较高</td><td>1、服务器需要安装wkhtmltopdf环境；2、根据网址生成pdf，对于有权限控制的页面需要在拦截器进行处理</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr></tbody></table><p>今天我们使用在<strong>客户端执行</strong>(不需要服务器参与)的方式——jsPDF。</p><p>导入jsPDF</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install --save jspdf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>HTML</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code> <span class="token entity named-entity" title="&lt;">&amp;lt;</span>a-button  @click=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>onPDFExport<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>导出为PDF<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/a-button<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>JS</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 导出为PDF</span>
    <span class="token function">onPDFExport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>#screenshot<span class="token operator">-</span>box<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">html2canvas</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">canvas</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> contentWidth <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
            <span class="token keyword">let</span> contentHeight <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
            <span class="token comment">//一页pdf显示html页面生成的canvas高度;</span>
            <span class="token keyword">let</span> pageHeight <span class="token operator">=</span> contentWidth <span class="token operator">/</span> <span class="token number">592.28</span> <span class="token operator">*</span> <span class="token number">841.89</span><span class="token punctuation">;</span>
            <span class="token comment">//未生成pdf的html页面高度</span>
            <span class="token keyword">let</span> leftHeight <span class="token operator">=</span> contentHeight<span class="token punctuation">;</span>
            <span class="token comment">//页面偏移</span>
            <span class="token keyword">let</span> position <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token comment">//a4纸的尺寸[595.28,841.89]，html页面生成的canvas在pdf中图片的宽高</span>
            <span class="token keyword">let</span> imgWidth <span class="token operator">=</span> <span class="token number">595.28</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> imgHeight <span class="token operator">=</span> <span class="token number">592.28</span><span class="token operator">/</span>contentWidth <span class="token operator">*</span> contentHeight<span class="token punctuation">;</span>

            <span class="token keyword">let</span> pageData <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>image<span class="token operator">/</span>jpeg<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">let</span> pdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">jsPDF</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>pt<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>a4<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//有两个高度需要区分，一个是html页面的实际高度，和生成pdf的页面高度(841.89)</span>
            <span class="token comment">//当内容未超过pdf一页显示的范围，无需分页</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>leftHeight <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span> pageHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              pdf<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>pageData<span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token constant">JPEG</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> imgWidth<span class="token punctuation">,</span> imgHeight <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              <span class="token keyword">while</span><span class="token punctuation">(</span>leftHeight <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  pdf<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>pageData<span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token constant">JPEG</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> position<span class="token punctuation">,</span> imgWidth<span class="token punctuation">,</span> imgHeight<span class="token punctuation">)</span>
                  leftHeight <span class="token operator">-=</span> pageHeight<span class="token punctuation">;</span>
                  position <span class="token operator">-=</span> <span class="token number">841.89</span><span class="token punctuation">;</span>
                  <span class="token comment">//避免添加空白页</span>
                  <span class="token keyword">if</span><span class="token punctuation">(</span>leftHeight <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    pdf<span class="token punctuation">.</span><span class="token function">addPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            pdf<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>content<span class="token punctuation">.</span>pdf<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>展示效果</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/77defcda66bd45269560301574d7fde8~tplv-k3u1fbpfcp-zoom-1.image" alt="3.gif"></p><p>如此我们便实现了导出 HTML 为 PDF。</p><h2 id="将功能封装为组件" tabindex="-1"><a class="header-anchor" href="#将功能封装为组件" aria-hidden="true">#</a> 将功能封装为组件</h2><p>实现一次HTML导出图片需要写的代码太多，很多参数也需要按需定制。是否能够将其封装成组件呢？</p>`,13),j={href:"https://v2.cn.vuejs.org/v2/api/#v-slot",target:"_blank",rel:"noopener noreferrer"},T=e(`<h3 id="完整组件" tabindex="-1"><a class="header-anchor" href="#完整组件" aria-hidden="true">#</a> 完整组件</h3><div class="language-HTML line-numbers-mode" data-ext="HTML"><pre class="language-HTML"><code>&amp;lt;template&amp;gt;
  &amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
    &amp;lt;!-- 将可保存为图片的内容 通过一个 标签 框起来 --&amp;gt;
    &amp;lt;div :id=&amp;quot;id&amp;quot;&amp;gt;
        &amp;lt;!-- 需要导出的内容 --&amp;gt;
        &amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&amp;lt;script&amp;gt;
//引入html2canvas
import html2canvas from &amp;#39;html2canvas&amp;#39;;
export default {
  name: &amp;quot;Html2Image&amp;quot;,
  props: {
    id: { // id
      type: String,
      default: &amp;#39;export-box&amp;#39;,
    },
    filename: { // 导出文件名称
      type: String,
      default: &amp;#39;htmlPic&amp;#39;,
    },
    outType:{ // 导出类型
      type: String,
      default: &amp;#39;png&amp;#39;,
      validator(value) {
        return [&amp;#39;png&amp;#39;, &amp;#39;jpg&amp;#39;, &amp;#39;bmp&amp;#39;,&amp;#39;jpeg&amp;#39;,&amp;#39;gif&amp;#39;].includes(value)
      }
    },
    isFile: { // 是否为导出文件
      type: Boolean,
      default: false,
    },
    
  },
  methods: {
    //点击保存为Canvas
    onSaveCanvas(){
       // 这里的类名要与点击事件里的一样
        const canvas = document.querySelector(\`#\${this.id}\`);
        let that = this;
        html2canvas(canvas,{scale:2,logging:false,useCORS:true}).then(function(canvas) {
          const type = that.outType;
          let imgData = canvas.toDataURL(type);
          
          // 图片格式处理
          let _fixType = function(type) {
            type = type.toLowerCase().replace(/jpg/i, &amp;#39;jpeg&amp;#39;);
            let r = type.match(/png|jpeg|bmp|gif/)[0];
            return &amp;#39;image/&amp;#39; + r;
          };
          imgData = imgData.replace(_fixType(type),&amp;#39;image/octet-stream&amp;#39;);
          if(!that.isFile){
              const retn = URL.createObjectURL(that.convertBase64ToBlob(imgData))
              that.$emit(&amp;#39;onExport&amp;#39;,retn)
              return retn
          }
          //  以bolb文件下载
          that.downFileToLocal(that.filename + &amp;#39;.&amp;#39; + type,that.convertBase64ToBlob(imgData))
        });
    },
    // base64转化为Blob对象
    convertBase64ToBlob(imageEditorBase64) {
      let base64Arr = imageEditorBase64.split(&amp;quot;,&amp;quot;);
      let imgtype = &amp;quot;&amp;quot;;
      let base64String = &amp;quot;&amp;quot;;
      if (base64Arr.length &amp;gt; 1) {
        //如果是图片base64，去掉头信息
        base64String = base64Arr[1];
        imgtype = base64Arr[0].substring(
          base64Arr[0].indexOf(&amp;quot;:&amp;quot;) + 1,
          base64Arr[0].indexOf(&amp;quot;;&amp;quot;)
        );
      }
      // 将base64解码
      let bytes = atob(base64String);
      //let bytes = base64;
      let bytesCode = new ArrayBuffer(bytes.length);
      // 转换为类型化数组
      let byteArray = new Uint8Array(bytesCode);
 
      // 将base64转换为ascii码
      for (let i = 0; i &amp;lt; bytes.length; i++) {
        byteArray[i] = bytes.charCodeAt(i);
      }
      // 生成Blob对象（文件对象）
      return new Blob([bytesCode], { type: imgtype });
    },
    // 下载Blob流文件
    downFileToLocal(fileName, blob) {
      // 创建用于下载文件的a标签
      const d = document.createElement(&amp;quot;a&amp;quot;);
      // 设置下载内容
      d.href = URL.createObjectURL(blob);
      // 设置下载文件的名字
      d.download = fileName;
      // 界面上隐藏该按钮
      d.style.display = &amp;quot;none&amp;quot;;
      // 放到页面上
      document.body.appendChild(d);
      // 点击下载文件
      d.click();
      // 从页面移除掉
      document.body.removeChild(d);
      // 释放 URL.createObjectURL() 创建的 URL 对象
      window.URL.revokeObjectURL(d.href);
    },
  },
};
&amp;lt;/script&amp;gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Attributes</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>String</td><td>唯一ID，盒子内容将作为导出内容</td></tr><tr><td>filename</td><td>String</td><td>导出的文件名称（不带文件类型后缀）</td></tr><tr><td>outType</td><td>String</td><td>导出文件类型</td></tr><tr><td>isFile</td><td>Boolean</td><td>是否导出为文件，true将下载文件，false返回bolb路径</td></tr></tbody></table><p>Methods</p><table><thead><tr><th>方法</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>onSaveCanvas</td><td>执行导出或保存方法</td><td>若isFile为true则保存文件，若isFile为false则返回bolb路径</td></tr></tbody></table><p>Events</p><table><thead><tr><th>方法</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>onExport</td><td>导出方法</td><td>当触发导出/下载时会触发该方法输出 Bolb路径 类型String</td></tr></tbody></table><h3 id="使用组件" tabindex="-1"><a class="header-anchor" href="#使用组件" aria-hidden="true">#</a> 使用组件</h3><p>HTML</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token entity named-entity" title="&lt;">&amp;lt;</span>Html2Image ref=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>html2Image<span class="token entity named-entity" title="&quot;">&amp;quot;</span> @onExport=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>exportPic<span class="token entity named-entity" title="&quot;">&amp;quot;</span> <span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div class=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>export-content<span class="token entity named-entity" title="&quot;">&amp;quot;</span> style=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>border: 1px solid #F0F;width:200px<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>1<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>2<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>3<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/Html2Image<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>a-button  @click=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>onExportImgByComponent<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>组件导出为图片<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/a-button<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JS</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引入组件</span>
<span class="token keyword">import</span> Html2Image from <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>@<span class="token operator">/</span>components<span class="token operator">/</span>Html2Image<span class="token operator">/</span>Html2Image<span class="token punctuation">.</span>vue<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>
<span class="token comment">// 使用组件</span>
<span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
    Html2Image
<span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token comment">// methods</span>
<span class="token function">onExportImgByComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>previewPicComponent <span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>html2Image<span class="token punctuation">.</span><span class="token function">onSaveCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token function">exportPic</span><span class="token punctuation">(</span><span class="token parameter">baseUrl</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token comment">// 赋值导出图片的blob路径</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>previewPicComponent <span class="token operator">=</span> baseUrl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="q-a" tabindex="-1"><a class="header-anchor" href="#q-a" aria-hidden="true">#</a> Q&amp;A</h2><p><strong>Q.为什么外网图片展示不出?</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/36068e8ea46442fca4e0527ca3fa42f6~tplv-k3u1fbpfcp-zoom-1.image" alt="7BFD5507-2620-4EEB-A4AF-144F63441CD8.png"></p><p><strong>A: 设置 html2canvas 方法中 useCORS 为 true 即可。</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8296ccb966454ebfb835e28d46404673~tplv-k3u1fbpfcp-zoom-1.image" alt="AC53AB9C-170A-4CF8-8F1B-2C7724EDC3F6.png"></p><h2 id="最后要说的" tabindex="-1"><a class="header-anchor" href="#最后要说的" aria-hidden="true">#</a> 最后要说的</h2>`,19),H={href:"https://github.com/FireSmallPanda/vuexDemo.git",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/FireSmallPanda/vuexDemo/tree/master/src/components/ImageUpload",target:"_blank",rel:"noopener noreferrer"},D=n("p",null,"根据需求目前只封装了HTML导出为图片，相信大家可以依葫芦画瓢将导出Word和PDF也一并封装为组件。",-1),F=n("h2",{id:"参考文章",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考文章","aria-hidden":"true"},"#"),a(" 参考文章")],-1),B={href:"https://blog.csdn.net/liuzemtx/article/details/109307540",target:"_blank",rel:"noopener noreferrer"},C={href:"https://blog.csdn.net/xiao970615/article/details/126305092",target:"_blank",rel:"noopener noreferrer"},S={href:"https://gitcode.net/mirrors/linwalker/render-html-to-pdf?utm_source=csdn_github_accelerator",target:"_blank",rel:"noopener noreferrer"},P={href:"https://blog.csdn.net/lisheng19870305/article/details/124158191",target:"_blank",rel:"noopener noreferrer"},E={href:"https://landscape.tuchong.com/",target:"_blank",rel:"noopener noreferrer"},M=n("h2",{id:"推荐阅读",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#推荐阅读","aria-hidden":"true"},"#"),a(" 推荐阅读")],-1),A={href:"https://juejin.cn/post/7145604963593355277",target:"_blank",rel:"noopener noreferrer"},U={href:"https://juejin.cn/post/7143025612267978760",target:"_blank",rel:"noopener noreferrer"},I={href:"https://juejin.cn/post/7140422304920109092",target:"_blank",rel:"noopener noreferrer"},z={href:"https://juejin.cn/post/7135217402983235592",target:"_blank",rel:"noopener noreferrer"},R={href:"https://juejin.cn/post/7132628898453880840",target:"_blank",rel:"noopener noreferrer"},W=n("h2",{id:"开源作品",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开源作品","aria-hidden":"true"},"#"),a(" 开源作品")],-1),O=n("ul",null,[n("li",null,"政采云前端小报")],-1),J={href:"https://www.zoo.team/openweekly/",target:"_blank",rel:"noopener noreferrer"},N=n("ul",null,[n("li",null,"商品选择 sku 插件")],-1),V={href:"https://github.com/zcy-inc/skuPathFinder-back",target:"_blank",rel:"noopener noreferrer"},$=n("h2",{id:"招贤纳士",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#招贤纳士","aria-hidden":"true"},"#"),a(" 招贤纳士")],-1),Q=n("p",null,"政采云前端团队（ZooTeam），一个年轻富有激情和创造力的前端团队，隶属于政采云产品研发部，Base 在风景如画的杭州。团队现有 90 余个前端小伙伴，平均年龄 27 岁，近 4 成是全栈工程师，妥妥的青年风暴团。成员构成既有来自于阿里、网易的“老”兵，也有浙大、中科大、杭电等校的应届新人。团队在日常的业务对接之外，还在物料体系、工程平台、搭建平台、性能体验、云端应用、数据分析及可视化等方向进行技术探索和实战，推动并落地了一系列的内部技术产品，持续探索前端技术体系的新边界。",-1),G=n("p",null,[a("如果你想改变一直被事折腾，希望开始能折腾事；如果你想改变一直被告诫需要多些想法，却无从破局；如果你想改变你有能力去做成那个结果，却不需要你；如果你想改变你想做成的事需要一个团队去支撑，但没你带人的位置；如果你想改变既定的节奏，将会是“5 年工作时间 3 年工作经验”；如果你想改变本来悟性不错，但总是有那一层窗户纸的模糊… 如果你相信相信的力量，相信平凡人能成就非凡事，相信能遇到更好的自己。如果你希望参与到随着业务腾飞的过程，亲手推动一个有着深入的业务理解、完善的技术体系、技术创造价值、影响力外溢的前端团队的成长历程，我觉得我们该聊聊。任何时间，等着你写点什么，发给 "),n("code",null,"ZooTeam@cai-inc.com")],-1),Y=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/98d3aa3d1f8646a8bcda8cfd9e335a4b~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1);function Z(K,X){const t=o("ExternalLinkIcon");return i(),l("div",null,[d,r,u,m,n("p",null,[a("在我们日常开发中一定会遇到"),k,a("的需求，如导出查询表格中的内容为Excel表格——"),n("a",v,[a("《前端导出Excel，让后端刮目相看》"),s(t)]),a("、通过后台网页配置实现配置预览页与实际页面展示的统一——"),n("a",b,[a("《从零开发一款可视化大屏制作平台》"),s(t)]),a("。")]),y,n("p",null,[a("通过调研发现，可以使用 "),n("a",g,[a("html2canvas"),s(t)]),a(" 将网页先转换为 "),h,a("数据。再将其转换为图片的方法，最终实现我们想要的功能。")]),f,n("p",null,[a("目前市面上 HTML 导出 PDF 的实现方式有多种，如"),n("a",_,[a("jsPDF"),s(t)]),a("、"),n("a",q,[a("iText"),s(t)]),a("、"),n("a",x,[a("wkhtmltopdf"),s(t)]),a("等。在不同情况下我们应该使用不同的解决方案：")]),w,n("p",null,[a("我们可以通过"),n("a",j,[a("Vue的插槽"),s(t)]),a("将我们导出的内容进行插入")]),T,n("p",null,[a("项目地址: "),n("a",H,[a("https://github.com/FireSmallPanda/vuexDemo.git"),s(t)])]),n("p",null,[a("HTML导出为图片组件地址:"),n("a",L,[a("HTML导出为图片组件"),s(t)])]),D,F,n("p",null,[n("a",B,[a("《前端实现将页面保存成图片功能》"),s(t)])]),n("p",null,[n("a",C,[a("《base64字串转Blob文件流，Blob文件流再下载到本地》"),s(t)])]),n("p",null,[n("a",S,[a("《render-html-to-pdf》"),s(t)])]),n("p",null,[n("a",P,[a("《HTML页面导出为PDF》"),s(t)])]),n("p",null,[n("a",E,[a("外网图片来源——《风光摄影精选》"),s(t)])]),M,n("p",null,[n("a",A,[a("探索组件在线预览和调试"),s(t)])]),n("p",null,[n("a",U,[a("规范升级 NPM 包"),s(t)])]),n("p",null,[n("a",I,[a("你想知道的前后端协作规范都在这了"),s(t)])]),n("p",null,[n("a",z,[a("带你了解 Tree Shaking"),s(t)])]),n("p",null,[n("a",R,[a("厉害！这篇正则表达式竟写的如此详尽"),s(t)])]),W,O,n("p",null,[n("strong",null,[a("开源地址 "),n("a",J,[a("www.zoo.team/openweekly/"),s(t)])]),a(" (小报官网首页有微信交流群)")]),N,n("p",null,[n("strong",null,[a("开源地址 "),n("a",V,[a("https://github.com/zcy-inc/skuPathFinder-back/"),s(t)])])]),$,Q,G,Y])}const an=p(c,[["render",Z],["__file","所见即所得 —— HTML转图片组件开发.html.vue"]]);export{an as default};
