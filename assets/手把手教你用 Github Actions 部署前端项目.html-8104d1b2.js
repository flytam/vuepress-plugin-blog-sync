import{_ as p,z as i,A as c,Y as n,C as s,U as e,a6 as t,Q as l}from"./framework-cb9358d9.js";const o={},u=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/062656aeb5364e1fa7336e772b67d859~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1),r={href:"https://zoo.team/article/use-git-actions",target:"_blank",rel:"noopener noreferrer"},d=t('<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/de4e33841ece4711a7b2688ae4ae1393~tplv-k3u1fbpfcp-watermark.image" alt="明昼.png"></p><h1 id="为什么使用-github-actions" tabindex="-1"><a class="header-anchor" href="#为什么使用-github-actions" aria-hidden="true">#</a> 为什么使用 Github Actions ？</h1><p>众所周知，前端部署无非就是把打包之后的代码丢到 nginx html 目录下就完事了，但是每逢产品频繁改需求，甚至只是让你改线上一个字的时候，你总要重复一遍遍以下动作：修改，打包，登录服务器，上传代码，重启服务器。久而久之，别说是你受不了了，搁我旁边看着都受不了。这个时候，有没有想过有个机器人，能帮我们完成以上这些重复又没技术含量的活。没错，你猜对了，Github Actions 就是我们需要的那个机器人。</p><h1 id="github-actions-是什么" tabindex="-1"><a class="header-anchor" href="#github-actions-是什么" aria-hidden="true">#</a> Github Actions 是什么？</h1>',4),k={href:"https://www.ruanyifeng.com/blog/2015/09/continuous-integration.html?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e8b91cda03b24380b88417a8fbfd5a68~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1),v=n("p",null,"我们再梳理下正常需求的开发流程（如上图），以上操作是可重复利用的，利用这一概念，Github 集成了 Actions 市场，允许开发者把操作写成独立的脚本，发布到 Actions 市场，允许所有开发者使用，这里有点像 npm 和 vscode 中的插件。",-1),b=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10d0a151f9f645948754902968bec7ce~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1),h=n("p",null,"Github 给我们提供了一个以下配置的服务器来运行我们配置对应的 Actions",-1),y=n("ul",null,[n("li",null,"2-core CPU"),n("li",null,"7 GB of RAM memory"),n("li",null,"14 GB of SSD disk space")],-1),g={href:"https://docs.github.com/cn/actions/hosting-your-own-runners?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},f=n("h1",{id:"开始-部署自己的前端项目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开始-部署自己的前端项目","aria-hidden":"true"},"#"),s(" 开始：部署自己的前端项目")],-1),_=n("h2",{id:"_1、选择-github-项目仓库",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1、选择-github-项目仓库","aria-hidden":"true"},"#"),s(" 1、选择 Github 项目仓库")],-1),x={href:"https://github.com/zlyyyy/bilibili-vue?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},A=t(`<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cd6f838d27c74d099e90a735088fb0b6~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h2 id="_2、新建工作流-配置-actions" tabindex="-1"><a class="header-anchor" href="#_2、新建工作流-配置-actions" aria-hidden="true">#</a> 2、新建工作流，配置 Actions</h2><p>进入 Actions 后可以看到很多推荐的工作流模版，这里可以根据需要自行选择需要的模版，或者跳过模版，自行设置。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/857904631a6f480cb38d68a93d06782a~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><p>这里因为我是纯前端项目，所以我选择 Node.js 模版。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/86efdace59c74792b0c74a192954a454~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><p>点击 node.js 模版，会自动在项目 <code>.github/workflows 目录下生成 node.js.yml</code> 文件，我们可以把文件名字改成我们工作流的名称。当然，这里可以设置并存在很多工作流 <code>yml</code> 文件，例如 deploy.yml、test.yml、gh-page.yml 等。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># workflow名称。省略的话，默认为当前workflow文件名</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> Node.js CI
<span class="token comment"># 触发workflow的条件，</span>
<span class="token key atrule">on</span><span class="token punctuation">:</span>
<span class="token key atrule">push</span><span class="token punctuation">:</span>
<span class="token comment"># 只有master分支发生push事件时，才会触发workflow</span>
<span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> master <span class="token punctuation">]</span>
<span class="token key atrule">pull_request</span><span class="token punctuation">:</span>
<span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> master <span class="token punctuation">]</span>
<span class="token comment"># jobs表示执行的一项或多项任务</span>
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
<span class="token comment"># 任务的job_id，具体名称自定义，这里build代表打包</span>
<span class="token key atrule">build</span><span class="token punctuation">:</span>

<span class="token comment"># runs-on字段指定运行所需要的虚拟机环境。注意：这个是必填字段</span>
<span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
<span class="token comment"># 用于配置当前workflow的参数</span>
<span class="token key atrule">strategy</span><span class="token punctuation">:</span>
<span class="token key atrule">matrix</span><span class="token punctuation">:</span>
<span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>10.x<span class="token punctuation">,</span> 12.x<span class="token punctuation">,</span> 14.x<span class="token punctuation">,</span> 15.x<span class="token punctuation">]</span>
<span class="token comment"># See supported Node.js release schedule at https://nodejs.org/en/about/releases/</span>
<span class="token comment"># steps字段指定每个job的运行步骤，可以包含一个或多个步骤，每个步骤都可以配置指定字段</span>
<span class="token key atrule">steps</span><span class="token punctuation">:</span>
<span class="token comment"># 切代码到 runner</span>
<span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2
<span class="token comment"># 在当前操作系统安装node</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Use Node.js $<span class="token punctuation">{</span><span class="token punctuation">{</span> matrix.node<span class="token punctuation">-</span>version <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1
<span class="token key atrule">with</span><span class="token punctuation">:</span>
<span class="token key atrule">node-version</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> matrix.node<span class="token punctuation">-</span>version <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token comment"># 该运行的命令或者action</span>
<span class="token comment"># 安装依赖、运行测试、打包</span>
    <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> npm install
    <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> npm test
    <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> npm run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、常见的-actions-配置" tabindex="-1"><a class="header-anchor" href="#_3、常见的-actions-配置" aria-hidden="true">#</a> 3、常见的 Actions 配置</h2><h3 id="打版本标签-create-tag-release" tabindex="-1"><a class="header-anchor" href="#打版本标签-create-tag-release" aria-hidden="true">#</a> 打版本标签 Create Tag Release</h3>`,10),j={href:"https://github.com/marketplace/actions/create-tag-release?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},w=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token comment"># Sequence of patterns matched against refs/tags</span>
    <span class="token key atrule">tags</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> &amp;<span class="token comment">#39;v*&amp;#39; # Push events to matching v*, i.e. v1.0, v20.15.10</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> Create Release
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">build</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> Create Release
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout code
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Create Release
        <span class="token key atrule">id</span><span class="token punctuation">:</span> create_release
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/create<span class="token punctuation">-</span>release@latest
        <span class="token key atrule">env</span><span class="token punctuation">:</span>
          <span class="token key atrule">GITHUB_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.GITHUB_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment"># This token is provided by Actions, you do not need to create your own token</span>
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">tag_name</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.ref <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">release_name</span><span class="token punctuation">:</span> Release $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.ref <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">body</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
            Changes in this Release
            - First Change
            - Second Change</span>
          <span class="token key atrule">draft</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
          <span class="token key atrule">prerelease</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建-github-pages-站点" tabindex="-1"><a class="header-anchor" href="#创建-github-pages-站点" aria-hidden="true">#</a> 创建 Github Pages 站点</h3>`,2),G={href:"https://github.com/marketplace/actions/github-pages-v3?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},z=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> github pages
	<span class="token key atrule">on</span><span class="token punctuation">:</span>
	  <span class="token key atrule">push</span><span class="token punctuation">:</span>
	    <span class="token key atrule">branches</span><span class="token punctuation">:</span>
	      <span class="token punctuation">-</span> master <span class="token comment"># default branch</span>
	<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
	  <span class="token key atrule">deploy</span><span class="token punctuation">:</span>
	    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span><span class="token number">18.04</span>
	    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
	      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2
	      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> npm install
	      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> npm run docs<span class="token punctuation">:</span>build
	      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy
	        <span class="token key atrule">uses</span><span class="token punctuation">:</span> peaceiris/actions<span class="token punctuation">-</span>gh<span class="token punctuation">-</span>pages@v3
	        <span class="token key atrule">with</span><span class="token punctuation">:</span>
	          <span class="token key atrule">github_token</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.GITHUB_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>
	          <span class="token key atrule">publish_dir</span><span class="token punctuation">:</span> ./docs<span class="token punctuation">-</span>dist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多人协作开发-云端代码检测" tabindex="-1"><a class="header-anchor" href="#多人协作开发-云端代码检测" aria-hidden="true">#</a> 多人协作开发，云端代码检测</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Test
	
	<span class="token key atrule">on</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>push<span class="token punctuation">,</span> pull_request<span class="token punctuation">]</span>
	
	<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
	  <span class="token key atrule">lint</span><span class="token punctuation">:</span>
	    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
	    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
	    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2
	    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1
	      <span class="token key atrule">with</span><span class="token punctuation">:</span>
	        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> &amp;<span class="token comment">#39;12.x&amp;#39;</span>
	
	    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies
	      <span class="token key atrule">uses</span><span class="token punctuation">:</span> bahmutov/npm<span class="token punctuation">-</span>install@v1
	
	    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run linter
	      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm run lint
	
	  <span class="token key atrule">test</span><span class="token punctuation">:</span>
	    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
	    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
	    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2
	    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1
	      <span class="token key atrule">with</span><span class="token punctuation">:</span>
	        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> &amp;<span class="token comment">#39;12.x&amp;#39;</span>
	
	    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies
	      <span class="token key atrule">uses</span><span class="token punctuation">:</span> bahmutov/npm<span class="token punctuation">-</span>install@v1
	
	    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run test
	      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm test
	
	  <span class="token key atrule">build</span><span class="token punctuation">:</span>
	    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
	    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
	    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2
	    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1
	      <span class="token key atrule">with</span><span class="token punctuation">:</span>
	        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> &amp;<span class="token comment">#39;12.x&amp;#39;</span>
	
	    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies
	      <span class="token key atrule">uses</span><span class="token punctuation">:</span> bahmutov/npm<span class="token punctuation">-</span>install@v1
	
	    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build
	      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),S={href:"https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},B=n("h2",{id:"_4、搭配-docker",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4、搭配-docker","aria-hidden":"true"},"#"),s(" 4、搭配 docker")],-1),I=n("p",null,">为什么要使用 docker ？",-1),P=n("p",null,"没有 docker 之前，我是使用 webhook 实现自动部署，但后面遇到了服务器到期更换服务器的时候，就只能一个个重复操作来做迁移，而且文件目录管理混乱，项目变多时，维护成本也会越来越高。再看 docker 五大优势：持续集成、版本控制、可移植性、隔离性和安全性，是不是就是用来解决我们上述遇到的问题的。",-1),R={href:"https://github.com/zlyyyy/bilibili-vue?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},C=t(`<h3 id="_4-1-项目根目录新建-nginx-配置" tabindex="-1"><a class="header-anchor" href="#_4-1-项目根目录新建-nginx-配置" aria-hidden="true">#</a> 4.1 项目根目录新建 Nginx 配置</h3><p>项目根目新建 nginx 配置文件命名 vhost.nginx.conf（名字随便定，跟后面 <strong>Dockerfile</strong> 中引用一致即可）供后续使用，例：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>server <span class="token punctuation">{</span>
listen <span class="token number">80</span>;
server_name localhost;
location / <span class="token punctuation">{</span>
root /usr/share/nginx/html;
index index.html index.htm;
proxy_set_header Host $host;
if (!-f $request_filename) <span class="token punctuation">{</span>
rewrite ^.*$ /index.html break;
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html;
location = /50x.html <span class="token punctuation">{</span>
root /usr/share/nginx/html;
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-项目根目录新建-dockerfile-文件" tabindex="-1"><a class="header-anchor" href="#_4-2-项目根目录新建-dockerfile-文件" aria-hidden="true">#</a> 4.2 项目根目录新建 <strong>Dockerfile</strong> 文件</h3><p>项目根目录新建 <strong>Dockerfile</strong> 文件，构建镜像包使用，例：</p><div class="language-docker line-numbers-mode" data-ext="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> nginx</span>
<span class="token instruction"><span class="token keyword">COPY</span> ./dist/ /usr/share/nginx/html/</span>
<span class="token comment"># 第一步nginx配置文件名称</span>
  <span class="token instruction"><span class="token keyword">COPY</span> ./vhost.nginx.conf /etc/nginx/conf.d/bilibili-vue.conf</span>
<span class="token instruction"><span class="token keyword">EXPOSE</span> 80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-配置容器镜像服务" tabindex="-1"><a class="header-anchor" href="#_4-3-配置容器镜像服务" aria-hidden="true">#</a> 4.3 配置容器镜像服务</h3>`,7),E={href:"https://www.aliyun.com/product/acr?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},$={href:"https://www.aliyun.com/product/acr?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},q={href:"https://hub.docker.com/?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},N=t(`<h4 id="_4-3-1-第一步" tabindex="-1"><a class="header-anchor" href="#_4-3-1-第一步" aria-hidden="true">#</a> 4.3.1 第一步</h4><p>初次打开需要开通服务，配置登录密码（记下来，后面要用）。</p><h4 id="_4-3-2-第二步" tabindex="-1"><a class="header-anchor" href="#_4-3-2-第二步" aria-hidden="true">#</a> 4.3.2 第二步</h4><p>然后创建命名空间，再创建我们的镜像仓库，这里如果不想别人下载你的镜像的话就可以选择私有。然后点击下一步配置代码源，这里我选择了本地仓库，一方面是为了日志统一，可以在 Github Actions 看到所有日志，一方面是可以通过命令行直接推送镜像到镜像仓库，自由度比较高。 <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d6a271741c64d03b4996cefacd4cd32~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h4 id="_4-3-3-第三步" tabindex="-1"><a class="header-anchor" href="#_4-3-3-第三步" aria-hidden="true">#</a> 4.3.3 第三步</h4><p>之后就可以在页面看到我们创建的仓库，点击仓库名称进入，可以看到仓库的基本信息和操作指南，这个时候一个镜像仓库就完全创建成功了。 <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4947305f1d3245b583f677c2124f95c5~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bbe33f7db28f4de3a796bddcfbd3e79b~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h3 id="_4-4-如何跟-actions-联动" tabindex="-1"><a class="header-anchor" href="#_4-4-如何跟-actions-联动" aria-hidden="true">#</a> 4.4 如何跟 Actions 联动</h3><p>我们只用在 Actions 中 build 镜像后登录阿里云 Registry 实例就好了，但是这个时候如果明文直接写在 yml 中肯定是不行的，Github 早就帮我们考虑到了这点，回到 Github 项目中，依次点击 Settings =&gt; Secrets =&gt; New repository secret ，设置 secret ，配置上述容器镜像账号的用户名（阿里云用户名）和密码（上述配置容器镜像服务时设置的登录密码）。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8ca798f732d34d6ba23504e67582c752~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h2 id="_5、完整的-actions" tabindex="-1"><a class="header-anchor" href="#_5、完整的-actions" aria-hidden="true">#</a> 5、完整的 Actions</h2><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Docker Image CI <span class="token comment"># Actions名称</span>
<span class="token key atrule">on</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>push<span class="token punctuation">]</span> <span class="token comment"># 执行时机</span>
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>

<span class="token comment"># 这里我使用的是yarn，想用npm的同学将yarn命令修改为npm命令即可</span>
<span class="token key atrule">build</span><span class="token punctuation">:</span>
<span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
<span class="token key atrule">steps</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> checkout
<span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master
<span class="token comment"># 安装依赖</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> install
<span class="token key atrule">run</span><span class="token punctuation">:</span> yarn
<span class="token comment"># 打包</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> build project
<span class="token key atrule">run</span><span class="token punctuation">:</span> yarn run build

<span class="token comment"># 打包镜像推送到阿里云容器镜像服务</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build the Docker image
<span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span>
docker login <span class="token punctuation">-</span><span class="token punctuation">-</span>username=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span> registry.cn<span class="token punctuation">-</span>hangzhou.aliyuncs.com <span class="token punctuation">-</span><span class="token punctuation">-</span>password=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_PASSWORD <span class="token punctuation">}</span><span class="token punctuation">}</span>
docker build <span class="token punctuation">-</span>t bilibili<span class="token punctuation">-</span>vue<span class="token punctuation">:</span>latest .
docker tag bilibili<span class="token punctuation">-</span>vue registry.cn<span class="token punctuation">-</span>hangzhou.aliyuncs.com/zlyyyy/bilibili<span class="token punctuation">-</span>vue<span class="token punctuation">:</span>latest
docker push registry.cn<span class="token punctuation">-</span>hangzhou.aliyuncs.com/zlyyyy/bilibili<span class="token punctuation">-</span>vue<span class="token punctuation">:</span>latest <span class="token comment"># 推送</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ssh docker login <span class="token comment"># 使用appleboy/ssh-action@master登录服务器执行拉取镜像脚本，服务器ip、用户名、密码配置方式同容器镜像服务配置方式一样</span>
<span class="token key atrule">uses</span><span class="token punctuation">:</span> appleboy/ssh<span class="token punctuation">-</span>action@master
<span class="token key atrule">with</span><span class="token punctuation">:</span>
        <span class="token key atrule">host</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.SSH_HOST <span class="token punctuation">}</span><span class="token punctuation">}</span> 
<span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.SSH_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.SSH_PASSWORD <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key atrule">script</span><span class="token punctuation">:</span> cd ~ <span class="token important">&amp;amp;&amp;amp;</span> sh bilibili<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>deploy.sh $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_PASSWORD <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后一步登录服务器后，我执行了一个脚本来拉取云端最新镜像，并删除旧镜像，启动新镜像。脚本内容如下。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>---------docker Login--------<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>
<span class="token function">docker</span> login <span class="token parameter variable">--username</span><span class="token operator">=</span><span class="token variable">$1</span> registry.cn-hangzhou.aliyuncs.com <span class="token parameter variable">--password</span><span class="token operator">=</span><span class="token variable">$2</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>---------docker Stop--------<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>
<span class="token function">docker</span> stop bilibili-vue
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>---------docker Rm--------<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>
<span class="token function">docker</span> <span class="token function">rm</span> bilibili-vue
<span class="token function">docker</span> rmi registry.cn-hangzhou.aliyuncs.com/zlyyyy/bilibili-vue:latest
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>---------docker Pull--------<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>
<span class="token function">docker</span> pull registry.cn-hangzhou.aliyuncs.com/zlyyyy/bilibili-vue:latest
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>---------docker Create and Start--------<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>
<span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">8081</span>:80 <span class="token parameter variable">--name</span> bilibili-vue registry.cn-hangzhou.aliyuncs.com/zlyyyy/bilibili-vue:latest
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>---------deploy Success--------<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、测试流程-查看日志" tabindex="-1"><a class="header-anchor" href="#_6、测试流程-查看日志" aria-hidden="true">#</a> 6、测试流程，查看日志</h2><p>我们推送一次代码测试，打开 Actions 后可以看到自动运行的实时 workflow 结果，以及每步的日志信息。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cca263a1a9a749b28a2fb3659e68b970~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/92112ab947984c40b0a8b47abc535a0e~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h1><p>到此我们自动化部署成功，再也不要每次修改代码，手动更新线上了，后面迁移也会更方便，当然还有更多的自动化部署方式，比如直接使用 Github + 阿里云镜像仓库的触发器一样可以做到，容器服务也不仅限于阿里云，腾讯云等其他云服务厂商同样也是一样的使用方式。以上是我个人使用 Actions 的一些总结，如有错误，劳烦指正修改。当然对更多 Actions 玩法感兴趣的同学欢迎一起交流学习。当然这个仅限于个人的项目玩法，公司内部的项目有更加成熟完善的自动化方案，比如我们内部所使用的云长系统，就是解决此类问题的，具体云长的功能，他做了些什么，敬请期待。</p><h1 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h1>`,21),L={href:"http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},O={href:"https://www.ruanyifeng.com/blog/2015/09/continuous-integration.html?fileGuid=1PWJAvQBtLA5IGh3",target:"_blank",rel:"noopener noreferrer"},W=n("h2",{id:"推荐阅读",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#推荐阅读","aria-hidden":"true"},"#"),s(" 推荐阅读")],-1),D={href:"https://juejin.cn/post/6945624014643855367",target:"_blank",rel:"noopener noreferrer"},T={href:"https://juejin.cn/post/6948210854126944292",target:"_blank",rel:"noopener noreferrer"},Q=n("h2",{id:"招贤纳士",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#招贤纳士","aria-hidden":"true"},"#"),s(" 招贤纳士")],-1),H=n("p",null,"政采云前端团队（ZooTeam），一个年轻富有激情和创造力的前端团队，隶属于政采云产品研发部，Base 在风景如画的杭州。团队现有 40 余个前端小伙伴，平均年龄 27 岁，近 3 成是全栈工程师，妥妥的青年风暴团。成员构成既有来自于阿里、网易的“老”兵，也有浙大、中科大、杭电等校的应届新人。团队在日常的业务对接之外，还在物料体系、工程平台、搭建平台、性能体验、云端应用、数据分析及可视化等方向进行技术探索和实战，推动并落地了一系列的内部技术产品，持续探索前端技术体系的新边界。",-1),J=n("p",null,[s("如果你想改变一直被事折腾，希望开始能折腾事；如果你想改变一直被告诫需要多些想法，却无从破局；如果你想改变你有能力去做成那个结果，却不需要你；如果你想改变你想做成的事需要一个团队去支撑，但没你带人的位置；如果你想改变既定的节奏，将会是“5 年工作时间 3 年工作经验”；如果你想改变本来悟性不错，但总是有那一层窗户纸的模糊… 如果你相信相信的力量，相信平凡人能成就非凡事，相信能遇到更好的自己。如果你希望参与到随着业务腾飞的过程，亲手推动一个有着深入的业务理解、完善的技术体系、技术创造价值、影响力外溢的前端团队的成长历程，我觉得我们该聊聊。任何时间，等着你写点什么，发给 "),n("code",null,"ZooTeam@cai-inc.com")],-1),U=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ab2a1ec7678442a7a8943f76fb0bdea0~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1);function K(M,V){const a=l("ExternalLinkIcon");return i(),c("div",null,[u,n("p",null,[s("> 这是第 96 篇不掺水的原创，想获取更多原创好文，请搜索公众号关注我们吧~ 本文首发于政采云前端博客："),n("a",r,[s("手把手教你用 Github Actions 部署前端项目"),e(a)])]),d,n("p",null,[s("大家知道，"),n("a",k,[s("持续集成"),e(a)]),s("由很多操作组成，比如拉取最新代码、运行测试、登录服务器、部署服务器等，GitHub 把这些操作统一称为 Actions 。")]),m,v,b,h,y,n("p",null,[s("这个配置足够我们使用了，当然，如果你有网络时延的需求，（比如推送及拉取镜像时产生的网络时延），你也可以"),n("a",g,[s("自建服务器"),e(a)]),s("。")]),f,_,n("p",null,[s("这里我选择了刚开始很久以前学习 vue 时做的模仿bilibili做的项目 "),n("a",x,[s("bilibili-vue"),e(a)]),s(" ，进入项目仓库，可以看到对应的 Actions 标签，点击进入。")]),A,n("p",null,[s(">这里使用 Actions 市场中的 "),n("a",j,[s("Create Tag Release"),e(a)]),s(" 插件")]),w,n("p",null,[s(">这里使用 Actions 市场中的 "),n("a",G,[s("GitHub Pages v3"),e(a)]),s(" 插件")]),z,n("p",null,[s("以上是 Github 中常见的一些配置，更多 "),n("a",S,[s("Actions 配置"),e(a)]),s("可以参考官网。")]),B,I,P,n("p",null,[s("举例："),n("a",R,[s("bilibili-vue"),e(a)]),s(" ，不明白的同学可以参考我的配置。")]),C,n("p",null,[s("这里我选择了"),n("a",E,[s("阿里云的"),e(a)]),n("a",$,[s("容器镜像服务"),e(a)]),s("，为什么不使用国外的 "),n("a",q,[s("dockhub"),e(a)]),s(" 呢，因为这样使用起来速度快一点，而且有免费的个人版足够我们使用。")]),N,n("p",null,[n("a",L,[s("GitHub Actions 入门教程"),e(a)])]),n("p",null,[n("a",O,[s("持续集成是什么？"),e(a)])]),W,n("p",null,[n("a",D,[s("通过自定义Vue指令实现前端曝光埋点"),e(a)])]),n("p",null,[n("a",T,[s("H5 页面列表缓存方案"),e(a)])]),Q,H,J,U])}const F=p(o,[["render",K],["__file","手把手教你用 Github Actions 部署前端项目.html.vue"]]);export{F as default};
