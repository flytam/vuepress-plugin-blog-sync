import{_ as p,z as t,A as o,Y as n,C as s,U as e,a6 as c,Q as l}from"./framework-cb9358d9.js";const i={},r=n("h1",{id:"",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#","aria-hidden":"true"},"#")],-1),u=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d4eb6a01e6564840817b127265b07edd~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1),d=n("p",null,[n("img",{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d30955e687414d0eb3a1e01f1eb7a8dc~tplv-k3u1fbpfcp-watermark.image?",alt:"北海.png"})],-1),m={href:"https://www.zoo.team/article/monitor",target:"_blank",rel:"noopener noreferrer"},k=c(`<h3 id="一、为什么需要埋点-监控" tabindex="-1"><a class="header-anchor" href="#一、为什么需要埋点-监控" aria-hidden="true">#</a> 一、为什么需要埋点&amp;监控</h3><p>在开始正文之前，我们先想想为什么需要埋点&amp;监控？</p><p>当我们在分析复盘一个产品是否成功的时候，不同的角色考虑的方向是不同的。</p><p>站在产品的视角，经常会问如下几个问题：</p><ol><li><p>产品有没有用户使用</p></li><li><p>用户用得怎么样</p></li><li><p>系统会不会经常出现异常</p></li><li><p>如何更好地满足用户需求服务用户</p></li></ol><p>当站在技术视角时，经常会问如下几个问题：</p><ol><li><p>系统出现异常的频率如何</p></li><li><p>异常出现后如何快速进行定位追踪</p></li><li><p>如何分析解决问题</p></li></ol><p>而当站在老板的视角时，问题可能又会变为：</p><ol><li><p>我的存量用户多少，未来还有多少潜力</p></li><li><p>多少用户在系统内进行了消费</p></li></ol><p>当在回答了上述问题之后，埋点&amp;监控便跃然纸上。因为要回答以上问题，只有通过对系统进行数据分析的方式才能弄清楚。</p><p>其实无论是埋点亦或是监控，二者并不是独立存在，而是相互依存的关系。</p><p>&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/62d5cb6cb27c4d47801453b6755357f8~tplv-k3u1fbpfcp-zoom-1.image&quot; style=&quot;zoom:100%;&quot; /&gt;</p><h3 id="二、埋点-监控能做什么" tabindex="-1"><a class="header-anchor" href="#二、埋点-监控能做什么" aria-hidden="true">#</a> 二、埋点&amp;监控能做什么</h3><p>从单个页面的常规数据角度出发我们可以通过埋点获取：访问次数（UV/PV）、地域数据（IP）、在线时长、区域点击次数等数据。</p><p>当我们将这些单点数据按照特定的纬度进行数据聚合，就可以获得全流程视角下的数据如：用户留存率/流转率、用户转化率、用户访问深度等数据。</p><p>而在埋点数据进行上报的同时，我们也可以同步收集页面基础数据/接口相关数据如：页面加载/渲染时长、页面异常、请求接口等数据。</p><p>同时对于前端监控来说，大致可以分成三个方向：数据监控、性能监控、异常监控。</p><h5 id="数据监控" tabindex="-1"><a class="header-anchor" href="#数据监控" aria-hidden="true">#</a> 数据监控</h5><p>数据监控即通过数据分析用户行为，常见的监控数据包括：PV/UV、页面停留时长、通过什么入口进入、在页面触发了什么行为等。统计这些数据就是为了清楚用户来源，拓宽产品的推广渠道；了解用户在页面停留的时间情况，针对停留较短的页面进行分析改进。也就是我们常说的：who(uuid)、when(time)、from where(referrer)、where(x,y)、what(自定义拓展数据)串成的用户行为路径。</p><h5 id="性能监控" tabindex="-1"><a class="header-anchor" href="#性能监控" aria-hidden="true">#</a> 性能监控</h5><p>性能监控主要是针对前端进行监控，比如不同用户在不同地区使用不同机型下的首屏加载时间、页面的白屏时间、静态资源下载时间等数据。通过针对这些性能数据进行监控，可以大概反映前端性能的好坏，根据性能监测的结果可以进一步的去优化前端性能。</p><h5 id="异常监控" tabindex="-1"><a class="header-anchor" href="#异常监控" aria-hidden="true">#</a> 异常监控</h5><p>前端代码在执行过程中也可能会发生异常，因此需要引入异常监控例如 sentry 等工具及时的上报异常情况，可以避免线上故障的发上。常见的异常包括：Javascript 的异常监控、css 的异常监控等。</p><h3 id="三、目前埋点方案-后续演进方向" tabindex="-1"><a class="header-anchor" href="#三、目前埋点方案-后续演进方向" aria-hidden="true">#</a> 三、目前埋点方案&amp;后续演进方向</h3><h5 id="现有方案" tabindex="-1"><a class="header-anchor" href="#现有方案" aria-hidden="true">#</a> 现有方案</h5><p>目前公司已经存在一套埋点 SDK 在运行，使用的是代码埋点方案，其埋点上报数据可大致分为三类：页面进入、事件触发、页面离开。</p><p>(1) 页面进入(pageIn)</p><p>进入页面时，同步推送页面基础信息如：当前页面的来源页面、操作系统、浏览器、页面 url，发生时间等。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span> 
   title<span class="token operator">:</span> &amp;#<span class="token number">39</span>;政采云&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// document title </span>
   pre<span class="token operator">:</span> &amp;#<span class="token number">39</span>;&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// referrer </span>
   utm-url<span class="token operator">:</span> &amp;#<span class="token number">39</span>;a.b.c.d.e&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// url中获取的utm </span>
   utm-cnt<span class="token operator">:</span> &amp;#<span class="token number">39</span>;a.b.<span class="token number">0.0</span>.e&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// 这个页面的utm a b值 </span>
   scr<span class="token operator">:</span> &amp;#<span class="token number">39</span>;1400x900&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">//分辨率 </span>
   os<span class="token operator">:</span> &amp;#<span class="token number">39</span>;mac&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// 操作系统 </span>
   k<span class="token operator">:</span> &amp;#<span class="token number">39</span>;webkit&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// 浏览器内核 </span>
   b<span class="token operator">:</span> &amp;#<span class="token number">39</span>;chrome/<span class="token number">70</span>&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// 浏览器及版本 </span>
   lver<span class="token operator">:</span> &amp;#<span class="token number">39</span>;<span class="token number">1.0</span>.<span class="token number">0</span>&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// js版本 </span>
   createTime<span class="token operator">:</span> &amp;#<span class="token number">39</span>;&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// 当前时间的时间戳（用户本地时间）</span>
   logType<span class="token operator">:</span> <span class="token number">1</span> <span class="token comment">// 页面进入发送数据 </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(2) 事件触发(Event)</p><p>触发事件时，同步推送事件类型(click、hover等)、鼠标位置、附加业务参数等</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span> 
  evt<span class="token operator">:</span> &amp;#<span class="token number">39</span>;click&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// 事件类型 </span>
  utm-cnt<span class="token operator">:</span> &amp;#<span class="token number">39</span>;a.b.c.d.e&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// utm值 </span>
  bdata<span class="token operator">:</span> &amp;#<span class="token number">39</span>;<span class="token punctuation">{</span>&amp;quot;test&amp;quot;<span class="token operator">:</span> &amp;quot;<span class="token number">12345</span>&amp;quot; <span class="token punctuation">}</span>&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// 业务数据 </span>
  mx<span class="token operator">:</span> xx<span class="token punctuation">,</span> <span class="token comment">// 鼠标点击位置x </span>
  my<span class="token operator">:</span> xx<span class="token punctuation">,</span> <span class="token comment">// 鼠标点击位置y </span>
  lver<span class="token operator">:</span> &amp;#<span class="token number">39</span>;<span class="token number">1.0</span>.<span class="token number">0</span>&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// js版本 </span>
  logType<span class="token operator">:</span> <span class="token number">2</span> <span class="token comment">// 数据类型 </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(3) 页面离开(pageOut)</p><p>离开页面时，同步推送发生时间、页面 url 等</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span> 
    title<span class="token operator">:</span> &amp;#<span class="token number">39</span>;政采云&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// document title </span>
    pre<span class="token operator">:</span> &amp;#<span class="token number">39</span>;&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// referrer </span>
    utm-url<span class="token operator">:</span> &amp;#<span class="token number">39</span>;a.b.c.d.e&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// url中获取的utm </span>
    utm-cnt<span class="token operator">:</span> &amp;#<span class="token number">39</span>;a.b.<span class="token number">0.0</span>.e&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// 这个页面的utm a b值 </span>
    lver<span class="token operator">:</span> &amp;#<span class="token number">39</span>;<span class="token number">1.0</span>.<span class="token number">0</span>&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// js版本 </span>
    createTime<span class="token operator">:</span> &amp;#<span class="token number">39</span>;&amp;#<span class="token number">39</span>;<span class="token punctuation">,</span> <span class="token comment">// 当前时间的时间戳（用户本地时间）</span>
    logType<span class="token operator">:</span> <span class="token number">3</span> <span class="token comment">// 页面离开发送数据 </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其埋点大致逻辑如下图，通过生成独有的四段值 +pvid 即可定位某个项目的某个页面在某个区块点击了某个按钮，同时生成唯一的 pvid 记录页面的 pv 数据。具体说明可翻阅往期关于政采云埋点分析系统的文章。</p><p>&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c43ae17d076148c9a29b2ddf3923a8d5~tplv-k3u1fbpfcp-zoom-1.image&quot; style=&quot;zoom:100%;&quot; /&gt;</p><h5 id="后续演进" tabindex="-1"><a class="header-anchor" href="#后续演进" aria-hidden="true">#</a> 后续演进</h5><p>在现有 SDK 的基础上我们可以发现，目前的埋点 SDK 只上报了一些用户的基础信息数据，在性能数据和异常数据的上报上还存在可拓展的空间。</p><p>(1) 性能数据上报</p><p>在获取用户基础数据的同时，后续可以通过<code>window.performance</code>API获取前端性能数据，在第一次进入页面时随 pageIn 一起将页面初始性能数据进行上报。</p><p>&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/07992e597d3949cd9dcaa6aec189ab29~tplv-k3u1fbpfcp-zoom-1.image&quot; style=&quot;zoom: 100%;&quot; /&gt;</p><p>可进行上报的字段包含如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> getPerformanceData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> performance <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    performance <span class="token operator">=</span> window<span class="token punctuation">.</span>performance<span class="token punctuation">.</span><span class="token function">getEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    domainLookupEnd <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    domainLookupStart <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    connectStart <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    connectEnd <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    requestStart <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    responseStart <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token comment">// etc...</span>
  <span class="token punctuation">}</span> <span class="token operator">=</span> performance
  <span class="token keyword">const</span> dns <span class="token operator">=</span> <span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span>domainLookupEnd <span class="token operator">-</span> domainLookupStart<span class="token punctuation">)</span>
  <span class="token keyword">const</span> tcp <span class="token operator">=</span> <span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span>connectEnd <span class="token operator">-</span> connectStart<span class="token punctuation">)</span>
  <span class="token keyword">const</span> ttfb <span class="token operator">=</span> <span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span>responseStart <span class="token operator">-</span> requestStart<span class="token punctuation">)</span>
  <span class="token comment">// etc...</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token comment">// TODO...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(2) 接口数据上报</p><p>除了上报性能数据外，我们也可将页面内所发的所有请求通过重写<code>XMLHttpRequest</code>进行劫持打标上报，即在当前页面下的所有请求 header 上默认加上当前页面 ID，将各个请求与当前页面的 pageId 进行绑定。</p><p>通过该类数据可以进行统计分析出某一页面的请求量、请求异常等情况判断出页面级别的请求健康度；后期甚至可与 Yapi 接口系统打通，若出现异常情况可直接将实际请求参数与文档上的请求参数进行对比，排除异常是由于请求参数错误造成的。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> req <span class="token operator">=</span> XMLHttpRequest
<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">open<span class="token punctuation">,</span> send</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// TODO...</span>
  <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">open</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">open</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// TODO...</span>
  <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">send</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token constant">XXXXX</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token constant">XXX</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span>
    <span class="token function">send</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>open<span class="token punctuation">,</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>send<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="四、前端数据可视化" tabindex="-1"><a class="header-anchor" href="#四、前端数据可视化" aria-hidden="true">#</a> 四、前端数据可视化</h3><p>对于已经采集上来的数据经由数仓清洗之后的可视化玩法就千变万化了。可以针对不同元数据按不同指标纬度聚合，产生不同的数据分析侧重点。再通过各类可视化工具进行展示，例如：浑仪系统、小采BI等。</p><h5 id="浑仪系统" tabindex="-1"><a class="header-anchor" href="#浑仪系统" aria-hidden="true">#</a> 浑仪系统</h5><p>浑仪系统(内部系统)主要针对埋点进行元数据后台管理，推进埋点平台的规范化建设。同时在此基础上，优化数据分析功能，为公司内部用户提供埋点数据自助分析平台，提升数据利用率和日常工作效率。</p><h5 id="小采bi" tabindex="-1"><a class="header-anchor" href="#小采bi" aria-hidden="true">#</a> 小采BI</h5><p>小采BI是可视化团队内部搭建系统，分为报表搭建、大屏搭建和看板搭建等模块。通过内部这些搭建工具直接对元数据进行展示，组合成面向不同受众、不同角色的自定义数据报表或监控大屏等。</p><h3 id="五、结语" tabindex="-1"><a class="header-anchor" href="#五、结语" aria-hidden="true">#</a> 五、结语</h3><p>本文只是针对埋点系统和监控系统的融合的一点简单的介绍与探索，实际操作落地上肯定会有各种问题。比如多端情况下的数据埋点&amp;上报，比如手动埋点增加了工作量破坏了原有代码的可读性等一系列实操上的问题，这些都需要逐步完善优化，同时我们也希望各位读者提出自己意见和建议，一起完善埋点&amp;监控的大生态。</p><h2 id="推荐阅读" tabindex="-1"><a class="header-anchor" href="#推荐阅读" aria-hidden="true">#</a> 推荐阅读</h2>`,57),b={href:"https://juejin.cn/post/7111848825232293918",target:"_blank",rel:"noopener noreferrer"},v={href:"https://juejin.cn/editor/drafts/7109126523466022948",target:"_blank",rel:"noopener noreferrer"},h={href:"https://juejin.cn/post/7106652838800916517",target:"_blank",rel:"noopener noreferrer"},f={href:"https://juejin.cn/post/7104055306396631076",target:"_blank",rel:"noopener noreferrer"},_={href:"https://juejin.cn/post/7101457212085633054",target:"_blank",rel:"noopener noreferrer"},g=n("h2",{id:"开源作品",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开源作品","aria-hidden":"true"},"#"),s(" 开源作品")],-1),y=n("ul",null,[n("li",null,"政采云前端小报")],-1),j={href:"https://www.zoo.team/openweekly/",target:"_blank",rel:"noopener noreferrer"},w=n("ul",null,[n("li",null,"商品选择 sku 插件")],-1),x={href:"https://github.com/zcy-inc/skuPathFinder-back",target:"_blank",rel:"noopener noreferrer"},q=n("h2",{id:"招贤纳士",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#招贤纳士","aria-hidden":"true"},"#"),s(" 招贤纳士")],-1),z=n("p",null,"政采云前端团队（ZooTeam），一个年轻富有激情和创造力的前端团队，隶属于政采云产品研发部，Base 在风景如画的杭州。团队现有 60 余个前端小伙伴，平均年龄 27 岁，近 4 成是全栈工程师，妥妥的青年风暴团。成员构成既有来自于阿里、网易的“老”兵，也有浙大、中科大、杭电等校的应届新人。团队在日常的业务对接之外，还在物料体系、工程平台、搭建平台、性能体验、云端应用、数据分析及可视化等方向进行技术探索和实战，推动并落地了一系列的内部技术产品，持续探索前端技术体系的新边界。",-1),X=n("p",null,[s("如果你想改变一直被事折腾，希望开始能折腾事；如果你想改变一直被告诫需要多些想法，却无从破局；如果你想改变你有能力去做成那个结果，却不需要你；如果你想改变你想做成的事需要一个团队去支撑，但没你带人的位置；如果你想改变既定的节奏，将会是“5 年工作时间 3 年工作经验”；如果你想改变本来悟性不错，但总是有那一层窗户纸的模糊… 如果你相信相信的力量，相信平凡人能成就非凡事，相信能遇到更好的自己。如果你希望参与到随着业务腾飞的过程，亲手推动一个有着深入的业务理解、完善的技术体系、技术创造价值、影响力外溢的前端团队的成长历程，我觉得我们该聊聊。任何时间，等着你写点什么，发给 "),n("code",null,"ZooTeam@cai-inc.com")],-1),L=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/98d3aa3d1f8646a8bcda8cfd9e335a4b~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1);function S(I,T){const a=l("ExternalLinkIcon");return t(),o("div",null,[r,u,d,n("p",null,[s("> 这是第 149 篇不掺水的原创，想获取更多原创好文，请搜索公众号关注我们吧~ 本文首发于政采云前端博客："),n("a",m,[s("浅谈前端埋点&监控"),e(a)])]),k,n("p",null,[n("a",b,[s("如何让 x == 1 && x == 2 && x == 3 等式成立"),e(a)])]),n("p",null,[n("a",v,[s("数据统计在性能检测中的应"),e(a)])]),n("p",null,[n("a",h,[s("浅析 path 常用工具函数源码"),e(a)])]),n("p",null,[n("a",f,[s("Web Components-LitElement实践"),e(a)])]),n("p",null,[n("a",_,[s("模块联邦浅析"),e(a)])]),g,y,n("p",null,[n("strong",null,[s("开源地址 "),n("a",j,[s("www.zoo.team/openweekly/"),e(a)])]),s(" (小报官网首页有微信交流群)")]),w,n("p",null,[n("strong",null,[s("开源地址 "),n("a",x,[s("https://github.com/zcy-inc/skuPathFinder-back/"),e(a)])])]),q,z,X,L])}const D=p(i,[["render",S],["__file","浅谈前端埋点 & 监控.html.vue"]]);export{D as default};
