import{_ as p,z as o,A as l,Y as n,C as s,U as t,a6 as e,Q as i}from"./framework-cb9358d9.js";const c={},u=n("p",null,[n("img",{src:"//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a895e3fec2be41cf8845179f5f5edc11~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1),d={href:"https://zoo.team/article/the-clean-annotation",target:"_blank",rel:"noopener noreferrer"},r=e(`<p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/161d6520fa73495c85fdffe1aea0a79b~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h3 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h3><p>有一些人认为，好的代码是自我解释的。合适的命名和优秀的代码的确可以减轻开发人员阅读代码的工作量，对于不是特别复杂的代码可能确实可以做到自我解释。但并不是所有场景都可以做到这一点，我们一起来了解一下“注释”吧。</p><h3 id="编程语言中对-注释-的解释" tabindex="-1"><a class="header-anchor" href="#编程语言中对-注释-的解释" aria-hidden="true">#</a> 编程语言中对“注释”的解释</h3><p>注释就是对代码的解释和说明。注释是开发人员在编写程序时，给一段代码的解释或提示，有助于提高程序代码的可读性。注释不会被计算机编译。</p><h3 id="要不要加注释-为什么要加注释" tabindex="-1"><a class="header-anchor" href="#要不要加注释-为什么要加注释" aria-hidden="true">#</a> 要不要加注释？为什么要加注释？</h3><p>注释的存在就是为了方便自己的二次阅读和代码维护以及项目交接。可以更好的理解代码，有助于提高协作效率，加快开发进程。</p><p>试想，你添加了一段逻辑较为复杂的代码，几个月后再看，还能不能迅速看懂？你刚刚接手一个老项目，项目里基本没有注释且逻辑复杂，你能高效率的看懂代码和了解业务吗？</p><p>所以添加注释还是有一定必要滴。</p><h3 id="基础篇" tabindex="-1"><a class="header-anchor" href="#基础篇" aria-hidden="true">#</a> 基础篇</h3><p>&gt;快捷键 windows： <code>ctrl+/</code> mac： <code>command+/</code></p><h4 id="注释的分类" tabindex="-1"><a class="header-anchor" href="#注释的分类" aria-hidden="true">#</a> 注释的分类</h4><p>一、 HTML 中的注释</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token entity named-entity" title="&lt;">&amp;lt;</span>div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      这是一行文字
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>!-- 这是一行被注释的文字 --<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>二、CSS 中的注释</p><ul><li>在 .html 文件中</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token entity named-entity" title="&lt;">&amp;lt;</span>style<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  div {
      /* color: #fff;  */
   }
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/style<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 .css 文件中</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
	<span class="token comment">/* color: #fff;  */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 .less 或 .scss 文件中</li></ul><div class="language-less line-numbers-mode" data-ext="less"><pre class="language-less"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
	<span class="token comment">/* color: #fff;*/</span>  <span class="token comment">/* 多行注释*/</span>
	<span class="token comment">// font-size: 14px; // 单行注释</span>
	<span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>三、JS 中的注释</p><ul><li>用法 <ul><li>可用于解释 JavaScript 代码，增强其可读性。</li><li>也可以用于阻止代码执行。</li></ul></li><li>单行注释（行注释）—— 以 <code>// </code> 开头。任何位于 <code>//</code> 之后的文本都会被注释</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 定义一个空数组</span>
<span class="token keyword">var</span> ary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> ary2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 又定义一个空数组</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>多行注释（块注释）——以 <code>/*</code> 开头，以 <code>*/</code> 结尾。任何位于 <code>/*</code> 和 <code>*/</code> 之间的文本都会被注释</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/*
	这是多行注释
	定义一个数组
 */</span>
<span class="token keyword">var</span> ary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>用注释来阻止代码执行 —— 被注释的 JS 代码将不被执行</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//alert(&amp;quot;123&amp;quot;)  // 执行时未弹出该信息</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token number">456</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token comment">// 执行时弹出该信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>函数注释 <ul><li>一般以 <code>/**</code> 开头，以 <code>*/</code> 结尾。任何位于 <code>/**</code> 和 <code>*/</code> 之间的文本都会被注释</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 提交
 *
 * <span class="token keyword">@method</span> onSubmit
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">[</span>Object<span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">提交数据</span>
 * <span class="token keyword">@return</span>  <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">[</span>Bollean<span class="token punctuation">]</span><span class="token punctuation">}</span></span>  [返回是否提交成功 ]
 */</span>
<span class="token keyword">const</span> onSubmit <span class="token operator">=</span> <span class="token punctuation">(</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>四、特殊标记注释</p><ul><li>**TODO **在该注释处有功能代码待编写，待实现的功能在说明中会简略说明</li><li><strong>FIXME</strong> 在该注释处代码需要修正，甚至代码是错误的，不能工作，需要修复，如何修正会在说明中简略说明</li><li>**XXX **在该注释处代码虽然实现了功能，但是实现的方法有待商榷，希望将来能改进，要改进的地方会在说明中简略说明</li><li>**NOTE **在该注释处说明代码如何工作</li><li>**HACK **在该注释处编写得不好或格式错误，需要根据自己的需求去调整程序代码</li><li>**BUG **在该注释处有 Bug</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// TODO功能未完成，待完善</span>
<span class="token comment">// FIXME  待修复</span>
<span class="token comment">// XXX    实现方法待确认</span>
<span class="token comment">// NOTE   代码功能说明</span>
<span class="token comment">// HACK   此处写法有待优化</span>
<span class="token comment">// BUG    此处有 Bug</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Tips：</p>`,34),k=n("code",null,"//",-1),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Comments",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"/* */",-1),b=n("code",null,"// ",-1),y=n("code",null,"/* */ ",-1),g=n("li",null,[s("单行注释为什么有时候写在代码上方，有时候写在代码后方？ "),n("ul",null,[n("li",null,"注释可以书写在代码中的任意位置。个人理解，一般写在代码上方的时候意为对后面一段代码的注释，而写在代码后方的时候意为对本行代码的注释。")])],-1),h=e(`<h4 id="注释写法规范" tabindex="-1"><a class="header-anchor" href="#注释写法规范" aria-hidden="true">#</a> 注释写法规范</h4><ul><li>文件注释 <ul><li>位于文件头部，一般包含概要、作者、版本改动信息以及修改时间等内容</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">/*
   * 简述当前文件功能
   * @author 作者名称
   * @version 版本号 最近编辑时间
   * @description 该版本改动信息
   */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>单行注释 <ul><li>总是在 <code>//</code> 后留一个空格</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">// 这是一行注释</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>多行注释 <ul><li>总是保持星号纵向对齐（结束符前留一个空格）</li><li>不要在开始符、结束符所在行写注释</li><li>尽量使用单行注释代替多行注释</li><li>注释函数时，推荐使用多行注释</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">/*
    这里有一行注释
    这里有一行注释
    这里有一行注释
   */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>函数注释 <ul><li>其间每一行都以 <code>*</code> 开头，且与第一行第一个 <code>*</code> 对齐</li><li>注释内容与 <code>*</code> 间留一个空格</li><li>必须包含标签注释。例：</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
* 方法说明
* <span class="token keyword">@method</span> 方法名
* <span class="token keyword">@for</span> 所属类名
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>参数类型<span class="token punctuation">}</span></span> <span class="token parameter">参数名</span> 参数说明
* <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>返回值类型<span class="token punctuation">}</span></span> 返回值说明
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注释常用标签用法" tabindex="-1"><a class="header-anchor" href="#注释常用标签用法" aria-hidden="true">#</a> 注释常用标签用法</h4><ul><li>@type {typeName} <ul><li><code>*</code> 表示任何类型</li><li><code>?</code> 表示可以为 <code>null</code></li><li><code>!</code> 表示不能为 <code>null</code></li><li><code>[]</code> 表示数组</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
* <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
*/</span>
<span class="token keyword">var</span> foo1<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
* <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span>
* <span class="token keyword">@desc</span> 任何类型
*/</span>
<span class="token keyword">var</span> foo2<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
* <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">?</span>string<span class="token punctuation">}</span></span>
* <span class="token keyword">@desc</span> string或者null
*/</span>
<span class="token keyword">var</span> foo3<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>@param {&lt;type&gt;} name - some description <ul><li>非必传参数需给参数名加上 <code>[]</code></li><li>参数如有默认值需用 <code>=</code> 表示</li><li>如果参数是 Object，可继续用 <code>@param</code> 对其属性进行详细说明</li><li>若干个参数用 <code>...</code> 表示</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@func</span>
 * <span class="token keyword">@desc</span> 一个带参数的函数
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">a</span> - 参数a
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> b=1 - 参数b默认值为1
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> c=1 - 参数c有两种支持的取值  1—表示x  2—表示xx
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>object<span class="token punctuation">}</span></span> <span class="token parameter">d</span> - 参数d为一个对象
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">d<span class="token punctuation">.</span>e</span> - 参数d的e属性
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>object<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">g</span> - 参数g为一个对象数组
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">g<span class="token punctuation">.</span>h</span> - 参数g数组中一项的h属性
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">j</span><span class="token punctuation">]</span></span> - 参数j是一个可选参数
 */</span>
 <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> g<span class="token punctuation">,</span> j</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@func</span>
 * <span class="token keyword">@desc</span> 一个带若干参数的函数
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">...</span>string<span class="token punctuation">}</span></span> <span class="token parameter">a</span> - 参数a
 */</span>
<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),f={href:"http://yuri4ever.github.io/jsdoc/",target:"_blank",rel:"noopener noreferrer"},_=e(`<h3 id="拓展篇" tabindex="-1"><a class="header-anchor" href="#拓展篇" aria-hidden="true">#</a> 拓展篇</h3><h4 id="ie-条件注释-ie5" tabindex="-1"><a class="header-anchor" href="#ie-条件注释-ie5" aria-hidden="true">#</a> IE 条件注释（IE5+）</h4><p>IE 条件注释分为以下几种情况：</p><ul><li>只允许 IE 解释执行 <code>&amp;lt;!--[if IE]&amp;gt;&amp;lt;![endif]--&amp;gt;</code></li><li>只允许 IE 特定版本解释执行 <code>&amp;lt;!--[if IE 7]&amp;gt;&amp;lt;![endif]--&amp;gt;</code></li><li>只允许非 IE 特定版本执行注释 <code>&amp;lt;!--[if !IE 7]&amp;gt;&amp;lt;![endif]--&amp;gt;</code></li><li>只允许高于或低于 IE 特定版本执行注释 <code>&amp;lt;!--[if gt IE 7]&amp;gt;&amp;lt;![endif]--&amp;gt;</code></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token entity named-entity" title="&lt;">&amp;lt;</span>head<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  	<span class="token entity named-entity" title="&lt;">&amp;lt;</span>title<span class="token entity named-entity" title="&gt;">&amp;gt;</span>IE 条件注释<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/title<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  
  	<span class="token entity named-entity" title="&lt;">&amp;lt;</span>!-- 是 IE 时 --<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>!--[if IE]<span class="token entity named-entity" title="&gt;">&amp;gt;</span> 
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>link href=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>style.css<span class="token entity named-entity" title="&quot;">&amp;quot;</span> rel=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>stylesheet<span class="token entity named-entity" title="&quot;">&amp;quot;</span> type=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>text/css<span class="token entity named-entity" title="&quot;">&amp;quot;</span> /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>![endif]--<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>!-- 是 IE 7 时 --<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
 	 	<span class="token entity named-entity" title="&lt;">&amp;lt;</span>!--[if IE 7]<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
       <span class="token entity named-entity" title="&lt;">&amp;lt;</span>link href=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>style.css<span class="token entity named-entity" title="&quot;">&amp;quot;</span> rel=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>stylesheet<span class="token entity named-entity" title="&quot;">&amp;quot;</span> type=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>text/css<span class="token entity named-entity" title="&quot;">&amp;quot;</span> /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>![endif]--<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
 
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>!-- 不是 IE 7 时 --<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  	<span class="token entity named-entity" title="&lt;">&amp;lt;</span>!--[if !IE 7]<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        <span class="token entity named-entity" title="&lt;">&amp;lt;</span>link href=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>style.css<span class="token entity named-entity" title="&quot;">&amp;quot;</span> rel=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>stylesheet<span class="token entity named-entity" title="&quot;">&amp;quot;</span> type=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>text/css<span class="token entity named-entity" title="&quot;">&amp;quot;</span> /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>![endif]--<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  
  	<span class="token entity named-entity" title="&lt;">&amp;lt;</span>!-- 大于 IE 7 时 --<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  	<span class="token entity named-entity" title="&lt;">&amp;lt;</span>!--[if gt IE 7]<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
       <span class="token entity named-entity" title="&lt;">&amp;lt;</span>link href=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>style.css<span class="token entity named-entity" title="&quot;">&amp;quot;</span> rel=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>stylesheet<span class="token entity named-entity" title="&quot;">&amp;quot;</span> type=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>text/css<span class="token entity named-entity" title="&quot;">&amp;quot;</span> /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>![endif]--<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
 
  	<span class="token entity named-entity" title="&lt;">&amp;lt;</span>!-- 小于 IE 7 时 --<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
   	<span class="token entity named-entity" title="&lt;">&amp;lt;</span>!--[if lt IE 7]<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
       <span class="token entity named-entity" title="&lt;">&amp;lt;</span>link href=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>style.css<span class="token entity named-entity" title="&quot;">&amp;quot;</span> rel=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>stylesheet<span class="token entity named-entity" title="&quot;">&amp;quot;</span> type=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>text/css<span class="token entity named-entity" title="&quot;">&amp;quot;</span> /<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>![endif]--<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/head<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="井号-注释-和-三引号-注释" tabindex="-1"><a class="header-anchor" href="#井号-注释-和-三引号-注释" aria-hidden="true">#</a> # （井号）注释 和 &#39;&#39;&#39; （三引号）注释</h4><ul><li><code>#</code> 一般出现在各种脚本配置文件中，用法与 JS 单行注释 <code>//</code> 基本相同。Python 中也常常用到</li><li><code>&amp;#39;&amp;#39;&amp;#39;</code> 是 Python 中的多行注释语法，用两个 <code>&amp;#39;&amp;#39;&amp;#39;</code> 包含被注释的段落</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># python 的单行注释一</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>I could have code like this<span class="token punctuation">.</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token comment"># python 的单行注释二</span>

<span class="token comment"># print(&amp;quot;This won&amp;#39;t run.&amp;quot;) # 被注释的代码</span>

<span class="token operator">&amp;</span><span class="token comment">#39;&amp;#39;&amp;#39;</span>
	被三引号包裹的段落
	可以随意折行
	也可以注释代码
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>This won<span class="token operator">&amp;</span><span class="token comment">#39;t run.&amp;quot;)</span>
<span class="token operator">&amp;</span><span class="token comment">#39;&amp;#39;&amp;#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注释-被执行-了" tabindex="-1"><a class="header-anchor" href="#注释-被执行-了" aria-hidden="true">#</a> 注释 “被执行” 了？</h4><p>众所周知，注释的代码是不会被执行的。但是小编在查资料时看到了一段比较有意思的代码， Java 中的一行注释“被执行”了？</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>赵大<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">;</span>
		<span class="token comment">// \\u000dname=&amp;quot;钱二&amp;quot;;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码执行后的结果为<code>钱二</code>，也就是说在这段代码中，“被注释”的那行代码生效了！</p><p>这段代码的问题出在 <code>\\u000d</code> 这串特殊字符上。<code>\\u000d</code> 是一串 Unicode 字符，代表换行符。Java 编译器不仅会编译代码，还会解析 Unicode 字符。在上面这段代码把 <code>\\u000d</code> 给解析了，后面的代码就到了下面一行，超出了被注释的范围（单行注释的注释范围仅在当前行），所以执行结果为 <code>钱二</code> 而非 <code>赵大</code>。（如下）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>赵大<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">;</span>
		<span class="token comment">//</span>
		name<span class="token operator">=</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>钱二<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以本质上在代码执行的时候 <code>name=&amp;quot;钱二&amp;quot;</code> 并没有被注释，而是被换了行（奇怪的知识增加了）。 所以切记，注释确实是不会被执行的哦！</p><h3 id="注释相关插件" tabindex="-1"><a class="header-anchor" href="#注释相关插件" aria-hidden="true">#</a> 注释相关插件</h3><p>在这里推荐几个个人认为比较好用的注释相关的 Vscode 插件，可在 <code>setting.json</code> 文件下自定义设置（可通过 &#39;文件—首选项—设置&#39;，打开 Vscode 文件 <code>settings.json</code> ）</p>`,17),w={href:"https://marketplace.visualstudio.com/items?itemName=OBKoro1.korofileheader",target:"_blank",rel:"noopener noreferrer"},j=e("<li><strong>文件头部添加注释</strong><ul><li>在文件开头添加注释，记录文件信息/文件的传参/出参等</li><li>支持用户高度自定义注释选项, 适配各种需求和注释。</li><li>保存文件的时候，自动更新最后的编辑时间和编辑人</li><li>快捷键：<code>window</code>：<code>ctrl+alt+i</code>，<code>mac</code>：<code>ctrl+cmd+i</code>，<code>linux</code>：<code>ctrl+meta+i</code></li></ul></li>",1),q=n("p",null,[n("img",{src:"//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/532fb9594cf6495391feafd522ead899~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1),I=n("strong",null,"在光标处添加函数注释",-1),x=e("<li>在光标处自动生成一个注释模板</li><li>支持用户高度自定义注释选项</li><li>快捷键：<code>window</code>：<code>ctrl+alt+t</code>，<code>mac</code>：<code>ctrl+cmd+t</code>，<code>linux</code>：<code>ctrl+meta+t</code></li>",3),S={href:"https://github.com/OBKoro1/koro1FileHeader/issues/5",target:"_blank",rel:"noopener noreferrer"},E=n("li",null,"可自定义默认参数",-1),N=n("p",null,[n("img",{src:"//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/847b141df29f4fafbfafd580d3ddec5e~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1),O={href:"https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments",target:"_blank",rel:"noopener noreferrer"},T=n("ul",null,[n("li",null,"快讯"),n("li",null,"查询"),n("li",null,"待办事项"),n("li",null,"强调"),n("li",null,"注释掉的代码也可以设置样式，以使代码不应该存在"),n("li",null,"可自定义指定其他所需的注释样式")],-1),z=n("p",null,[n("img",{src:"//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5cc035f2bdc84190a02191d86b0c1546~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1),X={href:"https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight",target:"_blank",rel:"noopener noreferrer"},C=n("ul",null,[n("li",null,"高亮内置关键字，可通过自定义设置覆盖外观"),n("li",null,"也可自定义关键字")],-1),B=e(`<p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bbedfcef711e4b92abc318b3224a7f97~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h3 id="用事实说话" tabindex="-1"><a class="header-anchor" href="#用事实说话" aria-hidden="true">#</a> 用事实说话</h3><p>口说无凭，眼见为实。下面我们看下实际开发中的具体情况：</p><ul><li>没有注释</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> noWarehousetemIds <span class="token operator">=</span> beSelectSkucontainer<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> itemId<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>selectRowskey<span class="token punctuation">[</span>itemId<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> sku <span class="token operator">=</span> selectRowskey<span class="token punctuation">[</span>itemId<span class="token punctuation">]</span><span class="token punctuation">[</span>skuId<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>sku<span class="token punctuation">.</span>warehouseCode <span class="token operator">||</span> <span class="token function">lodashGet</span><span class="token punctuation">(</span>warehouses<span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>code<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>itemId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>noWarehousetemIds<span class="token punctuation">.</span>length <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token number">0</span> <span class="token operator">||</span> noStockItemIds<span class="token punctuation">.</span>length <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> itemIds <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>noWarehousetemIds<span class="token punctuation">,</span> <span class="token operator">...</span>noStockItemIds<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> itemNames <span class="token operator">=</span> itemIds<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>i <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>itemNameMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>itemName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Modal<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>错误提示<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span>
      content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">“</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>itemNames<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">”库存信息未完善，请完善库存信息</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>一般般的注释</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 遍历当前所有选中的sku，查找出没有库存的itemId</span>
<span class="token keyword">const</span> noStockItemIds <span class="token operator">=</span> beSelectSkucontainer<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> itemId<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>selectRowskey<span class="token punctuation">[</span>itemId<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> sku <span class="token operator">=</span> selectRowskey<span class="token punctuation">[</span>itemId<span class="token punctuation">]</span><span class="token punctuation">[</span>skuId<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>sku<span class="token punctuation">.</span>stockQuantity<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>itemId<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 有一条sku的库存为空时进入校验</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>noStockItemIds<span class="token punctuation">.</span>length <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> itemNames <span class="token operator">=</span> itemIds<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>i <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>itemNameMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>itemName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Modal<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>错误提示<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span>
    content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">“</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>itemNames<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">”库存信息未完善，请完善库存信息</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>更好的注释</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 遍历当前所有选中的sku，查找出没有库存的itemId</span>
<span class="token keyword">const</span> noStockItemIds <span class="token operator">=</span> beSelectSkucontainer<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> itemId<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
    <span class="token comment">// selectRowskey是一个对象，以itemId为key，sku对象作为value，sku对象以skuId作为key，sku作为value，只有selectRowskey下所有itemId下的sku都有库存才算校验通过</span>
    <span class="token comment">/*
        数据格式:
        selectRowskey: {
          12345678: { // itemId
              123456: { // skuId
              name: &amp;#39;sku&amp;#39;,
              }
          }
        }
      */</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>selectRowskey<span class="token punctuation">[</span>itemId<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> sku <span class="token operator">=</span> selectRowskey<span class="token punctuation">[</span>itemId<span class="token punctuation">]</span><span class="token punctuation">[</span>skuId<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>sku<span class="token punctuation">.</span>stockQuantity<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 只要有一条sku没有库存时，就塞到arr中，返回给noStockItemIds数组</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>itemId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 有一条sku的库存为空时进入校验</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>noStockItemIds<span class="token punctuation">.</span>length <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 根据id查找商品名称</span>
    <span class="token keyword">const</span> itemNames <span class="token operator">=</span> itemIds<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>i <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>itemNameMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>itemName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Modal<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        title<span class="token operator">:</span> <span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span>错误提示<span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span>
        content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">“</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>itemNames<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">39</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">”库存信息未完善，请完善库存信息</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看到上面这段代码可以很明显的体会到有没有注释以及注释写的清不清楚的重要性。若是写了注释但仍然看不懂，那还不如不写。</p><p>所以注释也不是随便写一写就可以的，要描述某段代码的功能，注明逻辑，让开发者可以”无脑“浏览。</p><p>之前在工作群中看到有人发过这样一张图（如下图），个人认为是一个很好的代码注释的范例：</p><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ce73da5b2de4504b3eba78015c5ae75~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h3 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h3><p>看到这里，对于注释的重要性各位已经有自己的认知。还有几点是我们写注释时需要注意的：</p><ul><li><p>注释内容要简洁、清楚明了。注释简述功能或实现逻辑即可，无需每行代码都添加注释</p></li><li><p>代码若有修改，切记同步修改对应的注释。不要出现过期的注释，否则会起到反作用</p><p>有任何意见欢迎下方评论区留言讨论~</p></li></ul><h3 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h3>`,17),M={href:"https://www.cnblogs.com/jinhongquan/p/12084984.html",target:"_blank",rel:"noopener noreferrer"},R={href:"https://www.cnblogs.com/chris-oil/p/4067415.html",target:"_blank",rel:"noopener noreferrer"},J={href:"https://blog.csdn.net/dietime1943/article/details/53466749",target:"_blank",rel:"noopener noreferrer"},D={href:"https://www.cnblogs.com/fzd19zx/archive/2013/06/06/3120811.html",target:"_blank",rel:"noopener noreferrer"},F={href:"https://www.cnblogs.com/chengxuyuanaa/p/12838284.html",target:"_blank",rel:"noopener noreferrer"},H={href:"https://blog.csdn.net/hdchangchang/article/details/8199054",target:"_blank",rel:"noopener noreferrer"},V={href:"https://zhidao.baidu.com/question/262696188.html",target:"_blank",rel:"noopener noreferrer"},U=n("h2",{id:"推荐阅读",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#推荐阅读","aria-hidden":"true"},"#"),s(" 推荐阅读")],-1),A={href:"https://juejin.cn/post/6872136699405664263",target:"_blank",rel:"noopener noreferrer"},K={href:"https://juejin.cn/post/6874743455776505870",target:"_blank",rel:"noopener noreferrer"},L=n("h2",{id:"招贤纳士",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#招贤纳士","aria-hidden":"true"},"#"),s(" 招贤纳士")],-1),W=n("p",null,"政采云前端团队（ZooTeam），一个年轻富有激情和创造力的前端团队，隶属于政采云产品研发部，Base 在风景如画的杭州。团队现有 40 余个前端小伙伴，平均年龄 27 岁，近 3 成是全栈工程师，妥妥的青年风暴团。成员构成既有来自于阿里、网易的“老”兵，也有浙大、中科大、杭电等校的应届新人。团队在日常的业务对接之外，还在物料体系、工程平台、搭建平台、性能体验、云端应用、数据分析及可视化等方向进行技术探索和实战，推动并落地了一系列的内部技术产品，持续探索前端技术体系的新边界。",-1),G=n("p",null,[s("如果你想改变一直被事折腾，希望开始能折腾事；如果你想改变一直被告诫需要多些想法，却无从破局；如果你想改变你有能力去做成那个结果，却不需要你；如果你想改变你想做成的事需要一个团队去支撑，但没你带人的位置；如果你想改变既定的节奏，将会是“5 年工作时间 3 年工作经验”；如果你想改变本来悟性不错，但总是有那一层窗户纸的模糊… 如果你相信相信的力量，相信平凡人能成就非凡事，相信能遇到更好的自己。如果你希望参与到随着业务腾飞的过程，亲手推动一个有着深入的业务理解、完善的技术体系、技术创造价值、影响力外溢的前端团队的成长历程，我觉得我们该聊聊。任何时间，等着你写点什么，发给 "),n("code",null,"ZooTeam@cai-inc.com")],-1),Q=n("p",null,[n("img",{src:"//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/20e4038b33d6408eaf55f7c3f5305a38~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1);function $(P,Z){const a=i("ExternalLinkIcon");return o(),l("div",null,[u,n("p",null,[s("> 这是第 71 篇不掺水的原创，想获取更多原创好文，请搜索公众号关注我们吧~ 本文首发于政采云前端博客："),n("a",d,[s("编写高质量可维护的代码：一目了然的注释"),t(a)])]),r,n("ul",null,[n("li",null,[s("为什么 "),k,s(" 注释可以在 .less 或 .scss 文件中使用，但是在 .html 和 .css 文件中不生效？ "),n("ul",null,[n("li",null,[s("在 "),n("a",m,[s("MDN"),t(a)]),s(" 中关于 CSS 注释只有 "),v,s(" 一种语法。但是在 LESS 和 SCSS 中支持注释的语法和 JS 中保持一致，有单行注释 "),b,s(" 和多行注释 "),y,s(" 两种。单行注释编译之后不会被保留。")])])]),g]),h,n("p",null,[s("了解更多可查看 "),n("a",f,[s("JSDoc"),t(a)])]),_,n("ul",null,[n("li",null,[n("a",w,[s("koroFileHeader"),t(a)]),s(" 在vscode中用于生成文件头部注释和函数注释的插件")]),j]),q,n("ul",null,[n("li",null,[I,n("ul",null,[x,n("li",null,[s("快捷键不可用很可能是被占用了，"),n("a",S,[s("参考这里"),t(a)])]),E])])]),N,n("ul",null,[n("li",null,[n("a",O,[s("Better Comments"),t(a)]),s(" 通过使用警报，信息，TODO 等进行注释来改善代码注释。使用此扩展，您将能够将注释分类为： "),T])]),z,n("ul",null,[n("li",null,[n("a",X,[s("TODO Highlight"),t(a)]),s(" 突出显示TODO，FIXME和任何关键字 "),C])]),B,n("p",null,[n("a",M,[s("为什么要写注释"),t(a)]),n("a",R,[s("js/javascript代码注释规范与示例"),t(a)]),n("a",J,[s("代码中的特殊注解 -- TODO、FIXME、XXX的作用"),t(a)]),n("a",D,[s("注释的作用, 以及如何写注释"),t(a)]),n("a",F,[s("你确定Java注释不会被执行吗？80%的人都不知道"),t(a)]),s("。 "),n("a",H,[s("IE 浏览器条件注释详解"),t(a)]),n("a",V,[s("关于CSS中对IE条件注释的问题"),t(a)])]),U,n("p",null,[n("a",A,[s("我的前端职业进阶之路"),t(a)])]),n("p",null,[n("a",K,[s("浅谈 React 中的 XSS 攻击"),t(a)])]),L,W,G,Q])}const nn=p(c,[["render",$],["__file","编写高质量可维护的代码：一目了然的注释.html.vue"]]);export{nn as default};
