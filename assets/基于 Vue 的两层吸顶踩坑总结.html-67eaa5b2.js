import{_ as s,z as n,A as o,Y as e,C as a,U as t,a6 as d,Q as l}from"./framework-cb9358d9.js";const c={},r=e("p",null,[e("img",{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/5/6/171e8d2b0103c1fa~tplv-t2oaga2asx-image.image",alt:""})],-1),p=e("h2",{id:"",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#","aria-hidden":"true"},"#"),a(" **")],-1),u=e("p",null,'<table><tbody><tr><td bgcolor="#FDFFE7"><font size="4">原创不易，希望能关注下我们，再顺手点个赞~~<font></font></font></td></tr></tbody></table> **',-1),m={href:"https://www.zoo.team/article/double-ceiling",target:"_blank",rel:"noopener noreferrer"},h=d(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>近日，在做活动页的过程中遇到两层吸顶的需求，并且要兼容 IE9 及以上的浏览器。乍一看不就是个吸顶嘛，应该不难吧，事实证明还是踩了很多坑才出来。兼容性问题多到吐血，我太难了。废话不多说，先看一下两层吸顶的最终实现效果，如下图所示。</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/11/17/16e79358fe045e6d~tplv-t2oaga2asx-image.image" alt="图片.gif"></p><p>功能点：两层吸顶，因为 Tabs 区域比较长所以在滚动过程中点击一层 Tabs 会回弹至一层吸顶刚吸顶的位置，这个功能点和锚点有些类似。二层 Tabs 通过 hover 切换，没有回弹效果。</p><h2 id="实现方式" tabindex="-1"><a class="header-anchor" href="#实现方式" aria-hidden="true">#</a> 实现方式</h2><p>本文主要通过 <code>VueSticky</code> 插件来实现吸顶，实现步骤描述如下：</p><ul><li><p>安装：<code>npm install vue-sticky \\--save</code></p></li><li><p>引入: <code>import VueSticky from &amp;quot;vue-sticky&amp;quot;</code></p><ul><li>使用：</li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>directives: {
    &amp;#39;sticky&amp;#39;: VueSticky,
},
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&amp;lt;ELEMENT v-sticky=&amp;quot;{ zIndex: NUMBER, stickyTop: NUMBER, disabled: [true|false]}&amp;quot;&amp;gt;
  &amp;lt;div&amp;gt; &amp;lt;!-- sticky wrapper, IMPORTANT --&amp;gt;
    CONTENT
  &amp;lt;/div&amp;gt;
&amp;lt;/ELEMENT&amp;gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看了 <code>VueSticky</code> 的源码后将该插件的实现原理简要概括如下：</p><p>首先判断该浏览器是否支持 <code>position:sticky;</code>，若支持就用 <code>position:sticky;</code> 来实现，若不支持就用 <code>position:fixed;</code> 的方式实现</p><p>所以大家不用担心兼容性问题，因为我已经帮大家测试过了，IE9 及以上的浏览器都可以支持。</p><h2 id="生效条件" tabindex="-1"><a class="header-anchor" href="#生效条件" aria-hidden="true">#</a> 生效条件</h2><p>需要注意的是，使用 <code>v-sticky</code> 有几个必要条件，否则会失效：</p><ul><li>父元素不能设置 <code>overflow:hidden</code> 或者 <code>overflow:auto</code> 属性</li><li>至少指定 top 、bottom 、left 、right 4 个值中的一个，否则只会处于相对定位</li><li>父元素的高度不能低于 sticky 元素的高度</li><li>sticky 元素仅在其父元素内生效</li></ul><h2 id="问题汇总" tabindex="-1"><a class="header-anchor" href="#问题汇总" aria-hidden="true">#</a> 问题汇总</h2><h3 id="◎-吸顶-叠罗汉" tabindex="-1"><a class="header-anchor" href="#◎-吸顶-叠罗汉" aria-hidden="true">#</a> ◎ 吸顶“叠罗汉”</h3><p>吸顶元素在滚动到组件底部时，在谷歌、火狐等浏览器中，两层吸顶在消失过程中有重叠现象，具体现象如下图所示:</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/11/17/16e79358fddccc75~tplv-t2oaga2asx-image.image" alt="0FABCFA5-B3D1-49C1-90C7-DCDDD458223E.png"></p><p>主要原因：第一层吸顶还符合吸顶条件，第二层吸顶已经开始消失</p><p>解决方案：给第一层吸顶元素添加 <code>minHeight</code> 属性，其大小为第一层吸顶元素的高度与第二层吸顶元素的高度的和。这里有一个需要注意的点在于：一开始第一层吸顶元素的高度并非两者之和，所以这里就需要监听滚动事件，在吸顶元素距离底部的距离为两者高度之和的位置处给第一层吸顶元素添加 <code>minHeight</code> 属性</p><p>以下代码块中，<code>sumHeight</code> 表示两个吸顶元素的高度和，<code>initialHeight</code> 表示的是第一层吸顶元素的高度</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  const offsetTop = document.querySelector(&amp;quot;.xxx&amp;quot;).offsetBottom;
  if (offsetBottom &amp;lt;= sumHeight) {
      document.querySelector(&amp;quot;.xxx&amp;quot;).style.minHeight = sumHeight;
  } else {
      document.querySelector(&amp;quot;.xxx&amp;quot;).style.minHeight = initialHeight;
  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="◎-吸顶-舍不得离开" tabindex="-1"><a class="header-anchor" href="#◎-吸顶-舍不得离开" aria-hidden="true">#</a> ◎ 吸顶“舍不得离开”</h3><p>在 IE 浏览器中，吸顶元素滚动到组件底部时不消失，具体现象如下图所示</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/11/17/16e7935901b09e96~tplv-t2oaga2asx-image.image" alt="702DD55C-D664-4a74-9DB1-BBC268992995.png"></p><p>主要原因：在滚动过程中吸顶元素的 <code>position:sticky;</code> 属性始终存在</p><p>解决方案：监听滚动事件，当滚动到组件底部时，将 <code>v-sticky=&amp;quot;{ stickyTop: 0, disabled: false }&amp;quot;</code> 中的 <code>disabled</code> 的值设为 <code>true</code> 即可</p><h3 id="◎-吸顶-难舍难分" tabindex="-1"><a class="header-anchor" href="#◎-吸顶-难舍难分" aria-hidden="true">#</a> ◎ 吸顶“难舍难分”</h3><p>在 IE 浏览器中，两层吸顶元素始终吸在一起</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/11/17/16e79358ffdcc904~tplv-t2oaga2asx-image.image" alt="ECE1EF93-1887-495c-8F35-19552522A406.png"></p><p>主要原因：第二层吸顶元素在不需要吸顶的区域，它的 <code>position</code> 值也为 <code>sticky</code></p><p>解决方案：监听滚动事件，在不需要吸顶的区域设置它的 <code>position</code> 值为 <code>static</code> 即可</p><h3 id="◎-吸顶-变形" tabindex="-1"><a class="header-anchor" href="#◎-吸顶-变形" aria-hidden="true">#</a> ◎ 吸顶“变形”</h3><p>同样 DOM 结构的吸顶元素，在 IE 浏览器中，吸顶会变形</p><p>查看 <code>vue-sticky</code> 的源码，发现 <code>position:fixed;</code> 是设置在要吸顶的元素的第一个子元素上</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/11/17/16e7935901ec6aaa~tplv-t2oaga2asx-image.image" alt="58BFFFDC-8353-4A35-87FC-C7848155842E.png"></p><p>因此为了兼容IE需要多加一层 <code>div</code> 结构</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&amp;lt;div v-sticky=&amp;quot;{ stickyTop: 0, disabled: false }&amp;gt;
    &amp;lt;div&amp;gt; &amp;lt;!-- sticky wrapper, IMPORTANT --&amp;gt;
        content
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><ul><li><p>组件的监听与移除</p><ul><li>在 <code>mounted</code> 回调中加入以下代码</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mounted() {
  // handleScroll 为页面滚动的监听回调
  window.addEventListener(&amp;#39;scroll&amp;#39;, this.handleScroll);
},
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>同时要在 <code>destroy</code> 回调中移除监听</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>beforeDestroy() {
  removeEventListener(&amp;quot;scroll&amp;quot;, this.handleScroll);
},
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="优化点" tabindex="-1"><a class="header-anchor" href="#优化点" aria-hidden="true">#</a> 优化点</h2>`,43),v=d(`<li><p>用监听事件监听滚动时，吸顶消失的很突兀</p><ul><li>判断浏览器是否支持 <code>sticky</code> ，若支持用 <code>position:sticky;</code> 实现，否则用 <code>position:fixed;</code></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>let supportCSSSticky = document.querySelector(&amp;quot;.xxx&amp;quot;).style.position === &amp;quot;sticky&amp;quot;;
if (!supportCSSSticky) {
  // 不支持的情况下监听滚动
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),g=e("p",null,"图片懒加载",-1),b={href:"https://juejin.cn/post/6844903991558537224",target:"_blank",rel:"noopener noreferrer"},x=d('<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>本文简单的介绍了 <code>VueSticky</code> 插件的实现原理并分享了实战过程中出现的问题以及解决方案，希望对大家有所帮助。如果大家也遇到过两层吸顶的问题或者你还知道更好的解决方案，欢迎在评论区留下宝贵评论。</p><h2 id="招贤纳士" tabindex="-1"><a class="header-anchor" href="#招贤纳士" aria-hidden="true">#</a> 招贤纳士</h2><p>政采云前端团队（ZooTeam），一个年轻富有激情和创造力的前端团队，隶属于政采云产品研发部，Base 在风景如画的杭州。团队现有 50 余个前端小伙伴，平均年龄 27 岁，近 3 成是全栈工程师，妥妥的青年风暴团。成员构成既有来自于阿里、网易的“老”兵，也有浙大、中科大、杭电等校的应届新人。团队在日常的业务对接之外，还在物料体系、工程平台、搭建平台、性能体验、云端应用、数据分析及可视化等方向进行技术探索和实战，推动并落地了一系列的内部技术产品，持续探索前端技术体系的新边界。</p><p>如果你想改变一直被事折腾，希望开始能折腾事；如果你想改变一直被告诫需要多些想法，却无从破局；如果你想改变你有能力去做成那个结果，却不需要你；如果你想改变你想做成的事需要一个团队去支撑，但没你带人的位置；如果你想改变既定的节奏，将会是“ 5 年工作时间 3 年工作经验”；如果你想改变本来悟性不错，但总是有那一层窗户纸的模糊… 如果你相信相信的力量，相信平凡人能成就非凡事，相信能遇到更好的自己。如果你希望参与到随着业务腾飞的过程，亲手推动一个有着深入的业务理解、完善的技术体系、技术创造价值、影响力外溢的前端团队的成长历程，我觉得我们该聊聊。任何时间，等着你写点什么，发给 <code>ZooTeam@cai-inc.com</code></p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/5/6/171e8b8d7ad15181~tplv-t2oaga2asx-image.image" alt=""></p><h2 id="推荐阅读" tabindex="-1"><a class="header-anchor" href="#推荐阅读" aria-hidden="true">#</a> 推荐阅读</h2>',7),f={href:"https://juejin.cn/post/6844903976068972552",target:"_blank",rel:"noopener noreferrer"},_={href:"https://juejin.cn/post/6844903988081475591",target:"_blank",rel:"noopener noreferrer"},y={href:"https://juejin.cn/post/6844903981819379719",target:"_blank",rel:"noopener noreferrer"};function k(E,q){const i=l("ExternalLinkIcon");return n(),o("div",null,[r,p,u,e("p",null,[a("> 本文首发于政采云前端团队博客： "),e("a",m,[a("基于 Vue 的两层吸顶踩坑总结"),t(i)])]),h,e("ul",null,[v,e("li",null,[g,e("ul",null,[e("li",null,[a("对于图片过多的页面，为了加速页面的加载速度，我们需要将页面内未出现在可视区域内的图片先不做加载， 等到滚动到可视区域后再去加载。这样子对于页面加载性能上会有很大的提升，也提高了用户体验，关于图片优化方面内容可以阅读我们团队另一篇文章"),e("a",b,[a("为你重新系统梳理下， Web 体验优化中和图有关的那些事（万字长文）"),t(i)])])])])]),x,e("p",null,[e("a",f,[a("1024 巨献！！一文看尽前端过去一年的精华沉淀（700 篇好文大汇总）"),t(i)])]),e("p",null,[e("a",_,[a("可能是最全的 “文本溢出截断省略” 方案合集"),t(i)])]),e("p",null,[e("a",y,[a("乾坤大挪移！React 也能 “用上” computed 属性"),t(i)])])])}const S=s(c,[["render",k],["__file","基于 Vue 的两层吸顶踩坑总结.html.vue"]]);export{S as default};
