import{_ as p,z as i,A as o,Y as n,C as s,U as t,a6 as e,Q as c}from"./framework-cb9358d9.js";const l={},u=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d4eb6a01e6564840817b127265b07edd~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1),d=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0f8d8fcd650d414896efe4887c579db1~tplv-k3u1fbpfcp-watermark.image?",alt:"沧澜.png"})],-1),r={href:"https://zoo.team/article/theme-scss",target:"_blank",rel:"noopener noreferrer"},m=e('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>在项目开发过程中，我们有时候遇到需要<strong>更换站点主题色</strong>的需求。乃至于 APP 底部的 banner 中的 icon、文案和背景图都是运营<strong>线上可配置的</strong>。还有的功能比如<strong>更换系统字体大小</strong>等。</p><p>这些本质上都是 CSS 的<strong>动态渲染</strong>的需求。如果在开发过程中<strong>写死 CSS 样式</strong>的话在面对这样的需求的时候就会真·痛苦面具了。所以我们需要提前定义<strong>一整套 CSS 的环境变量体系</strong>，在开发过程中就使用这套体系，未雨绸缪才能立于不败之地。</p><p>这里我们用到 <strong>SCSS</strong>（Sassy CSS）来实现这套体系。 SASS 是 CSS 的<strong>预处理器</strong>，由 Ruby 编写。一开始并不支持 {} 和这种原生 CSS 的写法，缩进也严格控制，增加了开发者的使用成本。具体的区别可以看下面这张 gif 图。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/86cad8f9d2f64b8ba39fd98cbfca14d5~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><p>但是由 SASS3 开始引入的 SCSS 语法完全兼容现有的 CSS 语法，能够在生成真正的 CSS 文件之前预处理一些逻辑，比如变量，循环，嵌套，混合，继承，导入等，使其在逻辑上能够拥有部分 JS 的特性。</p>',6),k={href:"https://www.sassmeister.com/",target:"_blank",rel:"noopener noreferrer"},v=e(`<h2 id="整体项目效果" tabindex="-1"><a class="header-anchor" href="#整体项目效果" aria-hidden="true">#</a> 整体项目效果</h2><p>切换主题色之后，能够按照选择的主题色进行不同的展示。 如下图展示。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/208a4e0c6c224699b4e610821f33466e~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h2 id="项目目录结构" tabindex="-1"><a class="header-anchor" href="#项目目录结构" aria-hidden="true">#</a> 项目目录结构</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>src
├── App.vue
├── main.js
├── router
│   └── index.js
├── store
│   └── index.js
├── style
│   ├── settings
│   │   └── variable.scss  // 样式变量定义文件
│   └── theme
│       ├── default
│       ├── index.scss // 主题入口文件
│       └── old
└── views
    ├── Home.vue // 主题切换页面
    ├── List.vue
    └── Mine.vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>废话不多说。我们直接开干吧。</p><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h2><p>首先我们需要安装 scss 解析环境</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i sass
// 注意 sass-loader 安装需要指定版本 如果安装最新版本会报错 this.getOptions 这个方法未定义
npm i -D sass-loader@10.1.0
// 利用 normalize.css 初始化页面样式
npm i -S normalize.css
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定义变量" tabindex="-1"><a class="header-anchor" href="#定义变量" aria-hidden="true">#</a> 定义变量</h2><p>我们需要提前把一些常用的主题色，字体大小，以及边距这种与视觉沟通好，然后定义对应的变量。这里我参考资料贴了一套自定义的颜色变量。当然里面的具体颜色可以根据需求动态调整。</p><h3 id="小技巧" tabindex="-1"><a class="header-anchor" href="#小技巧" aria-hidden="true">#</a> 小技巧</h3><p>这里讲一个小技巧，定义的时候可以先定义一个<strong>基准变量</strong> base-param 然后其他状态的值可以依赖这个 base-param 进行缩放或放大实现。比如不同大小规模的字体可以采用这种方法。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// 行高</span>
<span class="token property"><span class="token variable">$line-height-base</span></span><span class="token punctuation">:</span> 1.5 <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$line-height-lg</span></span><span class="token punctuation">:</span> 2 <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$line-height-sm</span></span><span class="token punctuation">:</span> 1.25 <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// ./style/settings/variable.scss</span>

<span class="token comment">// 字体颜色</span>
<span class="token property"><span class="token variable">$info</span></span><span class="token punctuation">:</span> #17a2b8 <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$danger</span></span><span class="token punctuation">:</span> #dc3545 <span class="token statement keyword">!default</span><span class="token punctuation">;</span>

<span class="token comment">// 字体大小 浏览器默认16px</span>
<span class="token property"><span class="token variable">$font-size-base</span></span><span class="token punctuation">:</span> 1rem <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$font-size-lg</span></span><span class="token punctuation">:</span> <span class="token variable">$font-size-base</span> <span class="token operator">*</span> 1.25 <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$font-size-slg</span></span><span class="token punctuation">:</span> <span class="token variable">$font-size-base</span> <span class="token operator">*</span> 1.75 <span class="token statement keyword">!default</span><span class="token punctuation">;</span>

<span class="token comment">// 字重</span>
<span class="token property"><span class="token variable">$font-weight-normal</span></span><span class="token punctuation">:</span> 400 <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$font-weight-bold</span></span><span class="token punctuation">:</span> 600 <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定义主题" tabindex="-1"><a class="header-anchor" href="#定义主题" aria-hidden="true">#</a> 定义主题</h2><p>我们目前接到的需求是适老化改造，目前市场上大多数的项目字体都比较小，对老年人用户不太友好。所以针对老年人用户需要放大系统字体，方便他们查看。你也可以根据自己的需求进行不同的主题定制。</p><p><strong>定义一个入口文件</strong></p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// ./style/theme/index.scss</span>

<span class="token keyword">@import</span> &amp;quot<span class="token punctuation">;</span>../settings/variable.scss&amp;quot<span class="token punctuation">;</span><span class="token punctuation">;</span>

<span class="token property"><span class="token variable">$themes-color</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
  <span class="token property">default</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
    <span class="token comment">// 全局样式属性</span>
    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$info</span><span class="token punctuation">,</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token variable">$font-weight-normal</span><span class="token punctuation">,</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$font-size-lg</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token property">old</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$danger</span><span class="token punctuation">,</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token variable">$font-weight-bold</span><span class="token punctuation">,</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$font-size-slg</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ... 可自定义其他主题</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>vue.config.js 配置项处理</strong></p><p>我们不想每次都引入 CSS 变量，可以里在配置项中利用 CSS 插件自动注入全局变量样式。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vue.config.js</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">loaderOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">scss</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// 注意: 在 sass-loader v8 中，这个选项是 prependData</span>
        <span class="token literal-property property">additionalData</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@import &amp;quot;@/style/theme/index.scss&amp;quot;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="主题色切换" tabindex="-1"><a class="header-anchor" href="#主题色切换" aria-hidden="true">#</a> 主题色切换</h2><p>主题色定义好之后就需要对他进行切换了。这也是<strong>一键换肤</strong>最核心的逻辑。</p><ul><li><strong>在 App.vue 文件下的 mounted 中将 body 添加一个自定义的 data-theme 属性，并将其设置为 default</strong></li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>// App.vue mounted() { document .getElementsByTagName(<span class="token entity named-entity" title="&quot;">&amp;quot;</span>body<span class="token entity named-entity" title="&quot;">&amp;quot;</span>)[0]
.setAttribute(<span class="token entity named-entity" title="&quot;">&amp;quot;</span>data-theme<span class="token entity named-entity" title="&quot;">&amp;quot;</span>, <span class="token entity named-entity" title="&quot;">&amp;quot;</span>default<span class="token entity named-entity" title="&quot;">&amp;quot;</span>); },
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>利用 webpack 自定义插件遍历主题目录文件，自动生成自定义主题目录数组</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vue.config.js</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>fs<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>webpack<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取主题文件名</span>
<span class="token keyword">const</span> themeFiles <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token operator">/</span>src<span class="token operator">/</span>style<span class="token operator">/</span>theme<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> ThemesArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
themeFiles<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">lstatSync</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token operator">/</span>src<span class="token operator">/</span>style<span class="token operator">/</span>theme<span class="token operator">/</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span> <span class="token operator">+</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>stat<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ThemesArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token comment">// 自定义webpack插件</span>
        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token constant">THEMEARR</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>ThemesArr<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>切换 js 逻辑实现</strong></li></ul><p><strong>初始化页面的时候，获取到默认主题</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Home.vue</span>
<span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>themeValue <span class="token operator">=</span> <span class="token constant">THEMEARR</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>currentThemeIndex <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>themeValue<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>theme<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> theme <span class="token operator">===</span> <span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>currentTheme <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>themeValue<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentThemeIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>把选择的主题赋值给自定义属性 data-theme</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Home.vue</span>

<span class="token comment">// 核心切换逻辑</span>
<span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">onConfirm</span><span class="token punctuation">(</span><span class="token parameter">currentTheme</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>currentTheme <span class="token operator">=</span> currentTheme<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>showPicker <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>currentThemeIndex <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>themeValue<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span>theme<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> theme <span class="token operator">===</span> currentTheme
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    document
      <span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>body<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>data<span class="token operator">-</span>theme<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token constant">THEMEARR</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentThemeIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="css-版本如何实现主题色切换" tabindex="-1"><a class="header-anchor" href="#css-版本如何实现主题色切换" aria-hidden="true">#</a> CSS 版本如何实现主题色切换</h3><p>可能大家不太了解，CSS 也是可以支持自定义属性的，这就为我们定义属性变量提供了基础。他通过在自定义属性之前加上前缀 <strong>--</strong> 来实现。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">body</span> <span class="token punctuation">{</span>
  <span class="token property">--foo</span><span class="token punctuation">:</span> #7f583f<span class="token punctuation">;</span>
  <span class="token property">--bar</span><span class="token punctuation">:</span> #f7efd2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先想到的就是给标签添加自定义主题属性 data-theme,再通过 css 属性选择器+命名空间来找到指定的元素并替换不同的主题色。这里采用的 t-文件名-含义类名来命名，防止样式冲突。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>// ./default.scss
// 也可以换成其他的自定义变量颜色
[data-theme=&amp;quot<span class="token punctuation">;</span>default&amp;quot<span class="token punctuation">;</span>] .t-list-title<span class="token punctuation">,</span>
[data-theme=&amp;quot<span class="token punctuation">;</span>default&amp;quot<span class="token punctuation">;</span>] .t-list-sub-title<span class="token punctuation">,</span>
[data-theme=&amp;quot<span class="token punctuation">;</span>default&amp;quot<span class="token punctuation">;</span>] <span class="token selector">.t-list-info</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem * 1.25<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

// ./old.scss
// 也可以换成其他的自定义变量颜色
[data-theme=&amp;quot<span class="token punctuation">;</span>old&amp;quot<span class="token punctuation">;</span>] .t-list-title<span class="token punctuation">,</span>
[data-theme=&amp;quot<span class="token punctuation">;</span>old&amp;quot<span class="token punctuation">;</span>] .t-list-sub-title<span class="token punctuation">,</span>
[data-theme=&amp;quot<span class="token punctuation">;</span>old&amp;quot<span class="token punctuation">;</span>] <span class="token selector">.t-list-info</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem * 1.75<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>// ./List.vue
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>template<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div class=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>home<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div class=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>container<span class="token entity named-entity" title="&quot;">&amp;quot;</span> v-for=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>(item, index) in 3<span class="token entity named-entity" title="&quot;">&amp;quot;</span> :key=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>index<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div class=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>t-list-title<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>标题<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div class=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>t-list-sub-title<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>副标题<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>div class=<span class="token entity named-entity" title="&quot;">&amp;quot;</span>t-list-info<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span>
        这是一段很长的详情信息这是一段很长的详情信息这是一段很长的详情信息这是一段很长的详情信息这是一段很长的详情信息这是一段很长的详情信息这是一段很长的详情信息
      <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
  <span class="token entity named-entity" title="&lt;">&amp;lt;</span>/div<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/template<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scss-版本如何实现主题色切换" tabindex="-1"><a class="header-anchor" href="#scss-版本如何实现主题色切换" aria-hidden="true">#</a> Scss 版本如何实现主题色切换</h3><h4 id="scss-前置知识" tabindex="-1"><a class="header-anchor" href="#scss-前置知识" aria-hidden="true">#</a> Scss 前置知识</h4><p>在使用 sass 之前，需要知道一些知识点。</p><ul><li><p>使用@each 循环</p><p>1.循环一个 list: 类名为 icon-10px 、icon-12px、icon-14px 写他们的字体大小写法就可以如下：</p></li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/988e776c0c83446cb62ad369a18fac21~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><p>2、循环一个 map：类名为 icon-primary、icon-success、icon-secondary 等，但是他们的值又都是变量，写法如下：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/89edd2eb57d94eb485b93c74a711de46~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><ul><li>map-get</li></ul><p>map-get(map,key) 函数的作用是根据 key 参数，返回 key 在 map 中对应的 value 值。如果 key 不存在 map 中，将返回 null 值。此函数包括两个参数：</p><p>map：定义好的 map。 key：需要遍历的 key。</p><p>假设要获取 facebook 键值对应的值 #3b5998，我们就可以使用 map-get() 函数来实现：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/70c01074ab404f0f81fa65e945d03d70~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><ul><li>使用&amp;嵌套覆盖原有样式</li></ul><p>当一个元素的样式在另一个容器中有其他指定的样式时，可以使用嵌套选择器让他们保持在同一个地方。<code>.no-opacity &amp;amp;</code>相当于<code>.no-opacity .foo</code>。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/105bd1160dbd4a8287154408cd243d41~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><ul><li>map-merge</li></ul><p>合并两个 map 形成一个新的 map 类型，即将 <em>map2</em> 添加到 <em>map1</em>的尾部</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$font-sizes</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>&amp;quot<span class="token punctuation">;</span>small&amp;quot<span class="token punctuation">;</span><span class="token punctuation">:</span> 12px<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>normal&amp;quot<span class="token punctuation">;</span><span class="token punctuation">:</span> 18px<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>large&amp;quot<span class="token punctuation">;</span><span class="token punctuation">:</span> 24px<span class="token punctuation">)</span>
<span class="token property"><span class="token variable">$font-sizes2</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>&amp;quot<span class="token punctuation">;</span>x-large&amp;quot<span class="token punctuation">;</span><span class="token punctuation">:</span> 30px<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>xx-large&amp;quot<span class="token punctuation">;</span><span class="token punctuation">:</span> 36px<span class="token punctuation">)</span>
<span class="token function">map-merge</span><span class="token punctuation">(</span><span class="token variable">$font-sizes</span><span class="token punctuation">,</span> <span class="token variable">$font-sizes2</span><span class="token punctuation">)</span>
结果<span class="token punctuation">:</span> &amp;quot<span class="token punctuation">;</span>small&amp;quot<span class="token punctuation">;</span><span class="token punctuation">:</span> 12px<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>normal&amp;quot<span class="token punctuation">;</span><span class="token punctuation">:</span> 18px<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>large&amp;quot<span class="token punctuation">;</span><span class="token punctuation">:</span> 24px<span class="token punctuation">,</span>
&amp;quot<span class="token punctuation">;</span>x-large&amp;quot<span class="token punctuation">;</span><span class="token punctuation">:</span> 30px<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>xx-large&amp;quot<span class="token punctuation">;</span><span class="token punctuation">:</span> 36px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>@content</li></ul><p><code>@content</code> 用在 <code>mixin</code> 里面的，当定义一个 <code>mixin</code> 后，并且设置了 <code>@content</code>； <code>@include</code> 的时候可以传入相应的内容到 <code>mixin</code> 里面</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d7369e9cb63e4343a56474f9a1568ede~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h4 id="综合使用" tabindex="-1"><a class="header-anchor" href="#综合使用" aria-hidden="true">#</a> 综合使用</h4><p><strong>定义混合指令,切换主题,并将主题中的所有规则添加到 theme-map 中</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// ./Home.vue

@mixin themify() {
  @each $theme-name, $map in $themes-color {
    // &amp;amp; 表示父级元素  !global 表示覆盖原来的
    [data-theme=&amp;quot;#{$theme-name}&amp;quot;] &amp;amp; {
      $theme-map: () !global;
      // 循环合并键值对
      @each $key, $value in $map {
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      // 表示包含 下面函数 themed()
      @content;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}
.t-list-title,
.t-list-sub-title,
.t-list-info {
  @include themify() {
    color: themed(&amp;quot;color&amp;quot;);
    font-weight: themed(&amp;quot;font-weight&amp;quot;);
    font-size: themed(&amp;quot;font-size&amp;quot;);
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>整体编译后的样式代码如下图所示</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/66d965691b67499781003c5bfbeb34b6~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h2 id="项目源码地址" tabindex="-1"><a class="header-anchor" href="#项目源码地址" aria-hidden="true">#</a> 项目源码地址</h2><p>想要看 demo 源码的可以点击这个连接查看代码。</p>`,67),b={href:"https://github.com/AshesOfHistory/test-skin-refresh",target:"_blank",rel:"noopener noreferrer"},h=n("p",null,"总结",-1),g=n("ul",null,[n("li",null,"了解 SCSS 的基础语法，并综合使用，实现了一键换肤功能。"),n("li",null,"利用 SCSS 强大的函数功能遍历类名统一添加以自定义属性名前缀的命名空间，利用循环自动生成 CSS 样式。"),n("li",null,"了解一键换肤的核心原理。")],-1),y=n("h2",{id:"参考文章",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考文章","aria-hidden":"true"},"#"),s(" 参考文章")],-1),f={href:"https://blog.csdn.net/wytraining/article/details/109676970",target:"_blank",rel:"noopener noreferrer"},q=n("h2",{id:"推荐阅读",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#推荐阅读","aria-hidden":"true"},"#"),s(" 推荐阅读")],-1),x=n("p",null,'[在 Vue 中为什么不推荐用 index 做 key](https://juejin.cn/post/7026119446162997261 "在 Vue 中为什么不推荐用 index 做 key")',-1),_=n("p",null,'[浅析Web录屏技术方案与实现](https://juejin.cn/post/7028723258019020836 "浅析Web录屏技术方案与实现")',-1),S=n("h2",{id:"开源作品",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开源作品","aria-hidden":"true"},"#"),s(" 开源作品")],-1),w=n("ul",null,[n("li",null,"政采云前端小报")],-1),j={href:"https://www.zoo.team/openweekly/",target:"_blank",rel:"noopener noreferrer"},$=n("ul",null,[n("li",null,"商品选择 sku 插件")],-1),z={href:"https://github.com/zcy-inc/skuPathFinder-back",target:"_blank",rel:"noopener noreferrer"},C=n("h2",{id:"招贤纳士",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#招贤纳士","aria-hidden":"true"},"#"),s(" 招贤纳士")],-1),T=n("p",null,"政采云前端团队（ZooTeam），一个年轻富有激情和创造力的前端团队，隶属于政采云产品研发部，Base 在风景如画的杭州。团队现有 60 余个前端小伙伴，平均年龄 27 岁，近 4 成是全栈工程师，妥妥的青年风暴团。成员构成既有来自于阿里、网易的“老”兵，也有浙大、中科大、杭电等校的应届新人。团队在日常的业务对接之外，还在物料体系、工程平台、搭建平台、性能体验、云端应用、数据分析及可视化等方向进行技术探索和实战，推动并落地了一系列的内部技术产品，持续探索前端技术体系的新边界。",-1),A=n("p",null,[s("如果你想改变一直被事折腾，希望开始能折腾事；如果你想改变一直被告诫需要多些想法，却无从破局；如果你想改变你有能力去做成那个结果，却不需要你；如果你想改变你想做成的事需要一个团队去支撑，但没你带人的位置；如果你想改变既定的节奏，将会是“5 年工作时间 3 年工作经验”；如果你想改变本来悟性不错，但总是有那一层窗户纸的模糊… 如果你相信相信的力量，相信平凡人能成就非凡事，相信能遇到更好的自己。如果你希望参与到随着业务腾飞的过程，亲手推动一个有着深入的业务理解、完善的技术体系、技术创造价值、影响力外溢的前端团队的成长历程，我觉得我们该聊聊。任何时间，等着你写点什么，发给 "),n("code",null,"ZooTeam@cai-inc.com")],-1),E=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/98d3aa3d1f8646a8bcda8cfd9e335a4b~tplv-k3u1fbpfcp-zoom-1.image",alt:""})],-1);function V(H,I){const a=c("ExternalLinkIcon");return i(),o("div",null,[u,d,n("p",null,[s("> 这是第 133 篇不掺水的原创，想获取更多原创好文，请搜索公众号关注我们吧~ 本文首发于政采云前端博客："),n("a",r,[s("如何利用 SCSS 实现一键换肤"),t(a)])]),m,n("p",null,[s("我们可以在"),n("a",k,[s("这个网址"),t(a)]),s("在线查看编译的 SCSS 编译成 CSS 之后的代码。")]),v,n("p",null,[n("a",b,[s("点击查看项目源码"),t(a)])]),h,g,y,n("p",null,[n("a",f,[s("https://blog.csdn.net/wytraining/article/details/109676970"),t(a)])]),q,x,_,S,w,n("p",null,[n("strong",null,[s("开源地址 "),n("a",j,[s("www.zoo.team/openweekly/"),t(a)])]),s(" (小报官网首页有微信交流群)")]),$,n("p",null,[n("strong",null,[s("开源地址 "),n("a",z,[s("https://github.com/zcy-inc/skuPathFinder-back/"),t(a)])])]),C,T,A,E])}const R=p(l,[["render",V],["__file","如何利用 SCSS 实现一键换肤.html.vue"]]);export{R as default};
